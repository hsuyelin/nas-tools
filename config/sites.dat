{
    "version": "202308201328",
    "indexer": [
        {
            "id": "nyaa",
            "name": "Nyaa",
            "domain": "https://nyaa.si/",
            "encoding": "UTF-8",
            "public": true,
            "proxy": true,
            "search": {
                "paths": [
                    {
                        "path": "?f=0&c=0_0&q={keyword}",
                        "method": "get"
                    }
                ]
            },
            "browse": {
                "path": "?p={page}",
                "start": 1
            },
            "torrents": {
                "list": {
                    "selector": "table.torrent-list > tbody > tr"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"/view/\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title": {
                        "selector": "td:nth-child(2) > a"
                    },
                    "details": {
                        "selector": "td:nth-child(2) > a",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "td:nth-child(3) > a[href*=\"/download/\"]",
                        "attribute": "href"
                    },
                    "date_added": {
                        "selector": "td:nth-child(5)"
                    },
                    "size": {
                        "selector": "td:nth-child(4)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "*": 0
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "*": 1
                        }
                    }
                }
            }
        },
        {
            "id": "acgrip",
            "name": "ACG.RIP",
            "domain": "https://acg.rip/",
            "encoding": "UTF-8",
            "public": true,
            "proxy": true,
            "search": {
                "paths": [
                    {
                        "path": "?term={keyword}",
                        "method": "get"
                    }
                ]
            },
            "browse": {
                "path": "page/{page}",
                "start": 1
            },
            "torrents": {
                "list": {
                    "selector": "table.table-hover > tr"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"/t/\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title": {
                        "selector": "span.title > a"
                    },
                    "details": {
                        "selector": "span.title > a",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "td.action > a",
                        "attribute": "href"
                    },
                    "date_added": {
                        "selector": "td.date > time",
                        "attribute": "datetime"
                    },
                    "size": {
                        "selector": "td.size"
                    },
                    "seeders": {
                        "selector": "td.peers > div.seed > span"
                    },
                    "leechers": {
                        "selector": "td.peers > div.leech > span"
                    },
                    "grabs": {
                        "selector": "td.peers > div.done > span"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "*": 0
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "*": 1
                        }
                    }
                }
            }
        },
        {
            "id": "mikanani",
            "name": "MiKan",
            "domain": "https://mikanani.me/",
            "encoding": "UTF-8",
            "public": true,
            "proxy": true,
            "search": {
                "paths": [
                    {
                        "path": "Home/Search?searchstr={keyword}",
                        "method": "get"
                    }
                ]
            },
            "browse": {
                "path": "Home/Classic/{page}",
                "start": 1
            },
            "torrents": {
                "list": {
                    "selector": "div.central-container > table > tbody > tr.js-search-results-row"
                },
                "fields": {
                    "id": {
                        "selector": "tr.js-search-results-row",
                        "attribute": "data-itemindex"
                    },
                    "title": {
                        "selector": "td:nth-child(1) > a.magnet-link-wrap"
                    },
                    "details": {
                        "selector": "td:nth-child(1) > a.magnet-link-wrap",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "td:nth-child(1) > a.js-magnet.magnet-link",
                        "attribute": "data-clipboard-text"
                    },
                    "date_added": {
                        "selector": "td:nth-child(3)"
                    },
                    "size": {
                        "selector": "td:nth-child(2)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "*": 0
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "*": 1
                        }
                    }
                }
            }
        },
        {
            "id": "dmhy",
            "name": "\u52a8\u6f2b\u82b1\u56ed",
            "domain": "https://dmhy.org/",
            "encoding": "UTF-8",
            "public": true,
            "proxy": true,
            "search": {
                "paths": [
                    {
                        "path": "topics/list?keyword={keyword}",
                        "method": "get"
                    }
                ]
            },
            "browse": {
                "path": "topics/list/page/{page}",
                "start": 1
            },
            "torrents": {
                "list": {
                    "selector": "table.tablesorter > tbody > tr"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"/topics/list/sort_id/\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title": {
                        "selector": "td.title > a"
                    },
                    "details": {
                        "selector": "td.title > a",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a.download-arrow.arrow-magnet",
                        "attribute": "href"
                    },
                    "date_added": {
                        "selector": "td:nth-child(1) > span",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "*": 0
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "*": 1
                        }
                    }
                }
            }
        },
        {
            "id": "eztv",
            "name": "EZTV",
            "domain": "https://eztv.re/",
            "encoding": "UTF-8",
            "public": true,
            "proxy": true,
            "language": "en",
            "search": {
                "paths": [
                    {
                        "path": "search/{keyword}",
                        "method": "get"
                    }
                ]
            },
            "browse": {
                "path": "page_{page}"
            },
            "torrents": {
                "list": {
                    "selector": "table.forum_header_border > tr[name]"
                },
                "fields": {
                    "id": {
                        "selector": "td:nth-child(2) > a[href*=\"/ep/\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title": {
                        "selector": "td:nth-child(2) > a",
                        "attribute": "title"
                    },
                    "details": {
                        "selector": "td:nth-child(2) > a",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "td:nth-child(3) > a[href*=\".torrent\"]",
                        "attribute": "href"
                    },
                    "date_added": {
                        "selector": "td:nth-child(5)",
                        "optional": true
                    },
                    "size": {
                        "selector": "td:nth-child(4)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6) > font"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "*": 0
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "*": 1
                        }
                    }
                }
            }
        },
        {
            "id": "hares",
            "name": "\u767d\u5154",
            "domain": "https://club.hares.top/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up,img.pro_50pctdown,img.pro_50pctdown2up,img.pro_30pctdown",
                        "attribute": "data-d",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "div.layui-torrents-Subject > div.left > p.layui-elip.layui-torrents-descr-width"
                    },
                    "labels": {
                        "selector": "div.layui-torrents-Subject > div.left > p.layui-elip.layui-torrents-descr-width > span"
                    }
                }
            }
        },
        {
            "id": "ourbits",
            "name": "\u6211\u5821",
            "domain": "https://ourbits.club/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies"
                    },
                    {
                        "id": 402,
                        "cat": "Movies/3D",
                        "desc": "Movies 3D"
                    }
                ],
                "tv": [
                    {
                        "id": 405,
                        "cat": "TV",
                        "desc": "TV Packs"
                    },
                    {
                        "id": 410,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries"
                    },
                    {
                        "id": 411,
                        "cat": "TV/Anime",
                        "desc": "Animations"
                    },
                    {
                        "id": 412,
                        "cat": "TV",
                        "desc": "TV Episodes"
                    },
                    {
                        "id": 413,
                        "cat": "TV",
                        "desc": "TV Shows"
                    },
                    {
                        "id": 419,
                        "cat": "TV",
                        "desc": "Concert"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td:nth-child(5)",
                        "index": 1
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span[title]",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4):not(:has(\"span\"))",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "td[class=\"embedded\"] > b > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "tags": {
                        "selector": "table.torrentname > tr > td.embedded > div:has(\"a\")"
                    },
                    "subject": {
                        "selector": "table.torrentname > tr > td.embedded",
                        "remove": "div,a,img,b"
                    },
                    "description": {
                        "text": "{% if fields['tags']%}{{ fields['subject']+' '+fields['tags'] }}{% else %}{{ fields['subject'] }}{% endif %}"
                    },
                    "labels": {
                        "selector": "table.torrentname > tr > td.embedded > div > a > div.tag"
                    }
                }
            }
        },
        {
            "id": "htpt",
            "name": "\u6d77\u68e0",
            "domain": "https://www.htpt.cc/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded > span"
                    }
                }
            }
        },
        {
            "id": "azusa",
            "name": "\u6893\u55b5",
            "domain": "https://azusa.ru/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "td[class=\"embedded\"] > b > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "table.torrentname > tr > td.embedded",
                        "index": -1
                    },
                    "labels": {
                        "selector": "table.torrentname > tr > td.embedded > span"
                    }
                }
            }
        },
        {
            "id": "soulvoice",
            "name": "\u8046\u97f3",
            "domain": "https://pt.soulvoice.club/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies/\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series/\u7535\u89c6\u5267"
                    },
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries/\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations/\u52a8\u6f2b"
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Show/\u7efc\u827a"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "a[href*=\"imdb.com/title/tt\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "table.torrentname > tr > td:nth-child(2)",
                        "remove": "a,img,span",
                        "contents": -1
                    },
                    "minimumratio": {
                        "case": {
                            "img[title=\"H&R\"]": 2,
                            "*": 0
                        }
                    },
                    "minimumseedtime": {
                        "case": {
                            "img[title=\"H&R\"]": 259200,
                            "*": 0
                        }
                    },
                    "labels": {
                        "selector": "table.torrentname > tr > td:nth-child(2) > span"
                    }
                }
            }
        },
        {
            "id": "leaves",
            "name": "\u7ea2\u53f6PT",
            "domain": "https://leaves.red/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 402,
                        "cat": "TV/Series",
                        "desc": "TV Series (\u5267\u96c6)"
                    },
                    {
                        "id": 403,
                        "cat": "TV/Shows",
                        "desc": "TV Shows (\u7535\u89c6\u8282\u76ee)"
                    },
                    {
                        "id": 404,
                        "cat": "TV/Documentaries",
                        "desc": "Documentaries (\u7eaa\u5b9e)"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Animations",
                        "desc": "Animations (\u52a8\u753b)"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "selector": "img[data-orig]",
                        "attribute": "data-orig"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td.rowfollow:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td.rowfollow:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td.rowfollow:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td.rowfollow:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "div > b > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "tags": {
                        "selector": "div > a.torrents-tag"
                    },
                    "subject": {
                        "selector": "td.embedded:nth-child(2) > div > div:nth-child(2) > span",
                        "contents": -1
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2)"
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2) > span",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    }
                }
            }
        },
        {
            "id": "ubits",
            "name": "UBits",
            "domain": "https://ubits.club/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies/\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries/\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations/\u52a8\u6f2b"
                    },
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series/\u8fde\u7eed\u5267"
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Shows/\u7efc\u827a"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "selector": "img[data-orig]",
                        "attribute": "data-orig"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td.rowfollow:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td.rowfollow:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td.rowfollow:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td.rowfollow:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "div > b > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "tags": {
                        "selector": "div > a.torrents-tag"
                    },
                    "subject": {
                        "selector": "td.embedded:nth-child(2) > div > div:nth-child(2) > span",
                        "contents": -1
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(1)",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(1) > span"
                    }
                }
            }
        },
        {
            "id": "hddolby",
            "name": "\u9ad8\u6e05\u675c\u6bd4",
            "domain": "https://www.hddolby.com/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series\u7535\u89c6\u5267"
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Shows\u7efc\u827a"
                    },
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations\u52a8\u6f2b"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded > span[style]",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded > span.tags"
                    },
                    "minimumratio": {
                        "case": {
                            "img.hitandrun": 1,
                            "*": 0
                        }
                    },
                    "minimumseedtime": {
                        "case": {
                            "img.hitandrun": 86400,
                            "*": 0
                        }
                    }
                }
            }
        },
        {
            "id": "keepfrds",
            "name": "\u670b\u53cb",
            "domain": "https://pt.keepfrds.com/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies/\u7535\u5f71"
                    },
                    {
                        "id": 301,
                        "cat": "Movies",
                        "desc": "Movie Packs/\u7535\u5f71(\u5408\u96c6)"
                    }
                ],
                "tv": [
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries/\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 304,
                        "cat": "TV/Documentary",
                        "desc": "Documentary Packs/\u7eaa\u5f55\u7247(\u5408\u96c6)"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations/\u52a8\u6f2b"
                    },
                    {
                        "id": 305,
                        "cat": "TV/Anime",
                        "desc": "Animation Packs/\u52a8\u6f2b(\u5408\u96c6)"
                    },
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series/\u5267\u96c6"
                    },
                    {
                        "id": 302,
                        "cat": "TV",
                        "desc": "TV Serie Packs/\u5267\u96c6(\u5408\u96c6)"
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Shows/\u7efc\u827a"
                    },
                    {
                        "id": 303,
                        "cat": "TV",
                        "desc": "TV Show Packs/\u7efc\u827a(\u5408\u96c6)"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "labels": {
                        "selector": "a[title][href*=\"details.php?id=\"] > span"
                    },
                    "title": {
                        "selector": "table.torrentname > tr > td",
                        "remove": "a,b"
                    }
                }
            }
        },
        {
            "id": "lemonhd",
            "name": "\u67e0\u6aac",
            "domain": "https://lemonhd.org/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "type": "all",
                        "method": "get"
                    },
                    {
                        "path": "torrents_movie.php",
                        "type": "movie",
                        "method": "get"
                    },
                    {
                        "path": "torrents_tv.php",
                        "type": "tv",
                        "method": "get"
                    },
                    {
                        "path": "torrents_animate.php",
                        "type": "anime",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}",
                    "stype": "s"
                }
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"a[href]\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details_\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "free_deadline": {
                        "selector": "div[style*=\"padding-left\"] > span",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "category": {
                        "selector": "img[class*=\"cat_\"]",
                        "attribute": "class",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "cat_",
                                    ""
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details_\"] > b"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details_\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details_\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "a[href*=\"imdb.com/title/tt\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-last-child(7) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-last-child(7) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-last-child(6)"
                    },
                    "seeders": {
                        "selector": "td:nth-last-child(5)"
                    },
                    "leechers": {
                        "selector": "td:nth-last-child(4)"
                    },
                    "grabs": {
                        "selector": "td:nth-last-child(3)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "div[style*=\"padding-left\"] > span": 0,
                            "div[style*=\"padding-left\"]": 0,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "*": 1
                        }
                    },
                    "description": {
                        "selector": "td:nth-child(3) > div",
                        "index": 1
                    },
                    "labels": {
                        "selector": "td:nth-child(3) > span"
                    }
                }
            }
        },
        {
            "id": "cyanbug",
            "name": "\u5927\u9752\u866b",
            "domain": "https://cyanbug.net/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies(\u7535\u5f71)",
                        "default": true
                    }
                ],
                "tv": [
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series(\u7535\u89c6\u5267)",
                        "default": true
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Shows(\u7efc\u827a)",
                        "default": true
                    },
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries(\u7eaa\u5f55\u7247)",
                        "default": true
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations(\u52a8\u753b)",
                        "default": true
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "selector": "img[data-orig]",
                        "attribute": "data-orig"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td.rowfollow:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td.rowfollow:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td.rowfollow:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td.rowfollow:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "div > b > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "tags": {
                        "selector": "div > a.torrents-tag"
                    },
                    "subject": {
                        "selector": "td.embedded:nth-child(2) > div > div:nth-child(2) > span",
                        "contents": -1
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2)",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2) > span"
                    }
                }
            }
        },
        {
            "id": "pthome",
            "name": "\u94c2\u91d1\u5bb6",
            "domain": "https://pthome.net/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies(\u7535\u5f71)"
                    }
                ],
                "tv": [
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries(\u8bb0\u5f55\u7247)"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations(\u52a8\u6f2b)"
                    },
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series(\u7535\u89c6\u5267)"
                    },
                    {
                        "id": 403,
                        "cat": "TV/Other",
                        "desc": "TV Shows(\u7efc\u827a)"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "td[class=\"embedded\"] > b > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "table.torrentname > tr > td.embedded > span[style]",
                        "index": -1
                    },
                    "labels": {
                        "selector": "table.torrentname > tr > td.embedded > span.tags"
                    }
                }
            }
        },
        {
            "id": "HDZone",
            "name": "\u7a7a\u95f4",
            "domain": "https://hdzone.me/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 411,
                        "cat": "Movies/SD",
                        "desc": "Movies SD"
                    },
                    {
                        "id": 412,
                        "cat": "Movies",
                        "desc": "Movies IPad"
                    },
                    {
                        "id": 413,
                        "cat": "Movies/HD",
                        "desc": "Movies 720p"
                    },
                    {
                        "id": 414,
                        "cat": "Movies/HD",
                        "desc": "Movies 1080p"
                    },
                    {
                        "id": 415,
                        "cat": "Movies",
                        "desc": "Movies REMUX"
                    },
                    {
                        "id": 450,
                        "cat": "Movies/BluRay",
                        "desc": "Movies Bluray"
                    },
                    {
                        "id": 499,
                        "cat": "Movies/UHD",
                        "desc": "Movies UHD Blu-ray"
                    },
                    {
                        "id": 416,
                        "cat": "Movies/UHD",
                        "desc": "Movies 2160p"
                    }
                ],
                "tv": [
                    {
                        "id": 417,
                        "cat": "TV/Documentary",
                        "desc": "Doc SD"
                    },
                    {
                        "id": 418,
                        "cat": "TV/Documentary",
                        "desc": "Doc IPad"
                    },
                    {
                        "id": 419,
                        "cat": "TV/Documentary",
                        "desc": "Doc 720p"
                    },
                    {
                        "id": 420,
                        "cat": "TV/Documentary",
                        "desc": "Doc 1080p"
                    },
                    {
                        "id": 421,
                        "cat": "TV/Documentary",
                        "desc": "Doc REMUX"
                    },
                    {
                        "id": 451,
                        "cat": "TV/Documentary",
                        "desc": "Doc Bluray"
                    },
                    {
                        "id": 500,
                        "cat": "TV/Documentary",
                        "desc": "Doc UHD Blu-ray"
                    },
                    {
                        "id": 422,
                        "cat": "TV/Documentary",
                        "desc": "Doc 2160p"
                    },
                    {
                        "id": 425,
                        "cat": "TV/SD",
                        "desc": "TVShow SD"
                    },
                    {
                        "id": 426,
                        "cat": "TV",
                        "desc": "TVShow IPad"
                    },
                    {
                        "id": 471,
                        "cat": "TV",
                        "desc": "TVShow IPad"
                    },
                    {
                        "id": 427,
                        "cat": "TV/HD",
                        "desc": "TVShow 720p"
                    },
                    {
                        "id": 472,
                        "cat": "TV/HD",
                        "desc": "TVShow 720p"
                    },
                    {
                        "id": 428,
                        "cat": "TV/HD",
                        "desc": "TVShow 1080i"
                    },
                    {
                        "id": 429,
                        "cat": "TV/HD",
                        "desc": "TVShow 1080p"
                    },
                    {
                        "id": 430,
                        "cat": "TV",
                        "desc": "TVShow REMUX"
                    },
                    {
                        "id": 452,
                        "cat": "TV/HD",
                        "desc": "TVShow Bluray"
                    },
                    {
                        "id": 431,
                        "cat": "TV/UHD",
                        "desc": "TVShow 2160p"
                    },
                    {
                        "id": 432,
                        "cat": "TV/SD",
                        "desc": "TVSeries SD"
                    },
                    {
                        "id": 433,
                        "cat": "TV",
                        "desc": "TVSeries IPad"
                    },
                    {
                        "id": 434,
                        "cat": "TV/HD",
                        "desc": "TVSeries 720p"
                    },
                    {
                        "id": 435,
                        "cat": "TV/HD",
                        "desc": "TVSeries 1080i"
                    },
                    {
                        "id": 436,
                        "cat": "TV/HD",
                        "desc": "TVSeries 1080p"
                    },
                    {
                        "id": 437,
                        "cat": "TV",
                        "desc": "TVSeries REMUX"
                    },
                    {
                        "id": 453,
                        "cat": "TV/HD",
                        "desc": "TVSeries Bluray"
                    },
                    {
                        "id": 438,
                        "cat": "TV/UHD",
                        "desc": "TVSeries 2160p"
                    },
                    {
                        "id": 444,
                        "cat": "TV/Anime",
                        "desc": "Anime SD"
                    },
                    {
                        "id": 445,
                        "cat": "TV/Anime",
                        "desc": "Anime IPad"
                    },
                    {
                        "id": 446,
                        "cat": "TV/Anime",
                        "desc": "Anime 720p"
                    },
                    {
                        "id": 447,
                        "cat": "TV/Anime",
                        "desc": "Anime 1080p"
                    },
                    {
                        "id": 448,
                        "cat": "TV/Anime",
                        "desc": "Anime REMUX"
                    },
                    {
                        "id": 454,
                        "cat": "TV/Anime",
                        "desc": "Anime Bluray"
                    },
                    {
                        "id": 449,
                        "cat": "TV/Anime",
                        "desc": "Anime 2160p"
                    },
                    {
                        "id": 501,
                        "cat": "TV/Anime",
                        "desc": "Anime UHD Blu-ray"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded > span"
                    }
                }
            }
        },
        {
            "id": "Avgv",
            "name": "\u827e\u8587",
            "domain": "https://avgv.cc/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "a[title][href*=\"details.php?id=\"] > span",
                        "contents": -1
                    }
                }
            }
        },
        {
            "id": "ptchina",
            "name": "\u94c2\u91d1\u5b66\u9662",
            "domain": "https://ptchina.org/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies/\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series/\u7535\u89c6\u5267"
                    },
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries/\u7eaa\u5f55\u7247"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "selector": "img[data-orig]",
                        "attribute": "data-orig"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td.rowfollow:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td.rowfollow:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td.rowfollow:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td.rowfollow:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "div > b > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "tags": {
                        "selector": "div > a.torrents-tag"
                    },
                    "subject": {
                        "selector": "td.embedded:nth-child(2) > div > div[style] > span",
                        "contents": -1
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(1)",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(1) > span"
                    }
                }
            }
        },
        {
            "id": "piggo",
            "name": "\u732a\u732a",
            "domain": "https://piggo.me/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "search.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "browse": {
                "path": "torrents.php"
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 402,
                        "cat": "TV/Series",
                        "desc": "\u7535\u89c6\u5267"
                    },
                    {
                        "id": 403,
                        "cat": "TV/Shows",
                        "desc": "\u7efc\u827a"
                    },
                    {
                        "id": 404,
                        "cat": "TV/Documentaries",
                        "desc": "\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Animations",
                        "desc": "\u52a8\u6f2b"
                    },
                    {
                        "id": 908,
                        "cat": "TV/Series",
                        "desc": "\u513f\u7ae5\u5267\u96c6"
                    },
                    {
                        "id": 909,
                        "cat": "Movies",
                        "desc": "\u513f\u7ae5\u7535\u5f71"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "selector": "img[data-orig]",
                        "attribute": "data-orig"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td.rowfollow:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td.rowfollow:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td.rowfollow:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td.rowfollow:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "div > b > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "tags": {
                        "selector": "div > a.torrents-tag"
                    },
                    "subject": {
                        "selector": "td.embedded:nth-child(2) > div > div[style] > span",
                        "contents": -1
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table.torrentname > td:has(\"a[href*='details.php?id=']\")",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table.torrentname > td:has(\"a[href*='details.php?id=']\") > span"
                    }
                }
            }
        },
        {
            "id": "hdmayi",
            "name": "\u5c0f\u8682\u8681",
            "domain": "http://hdmayi.com/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 402,
                        "cat": "TV/Series",
                        "desc": "\u7535\u89c6\u5267"
                    },
                    {
                        "id": 403,
                        "cat": "TV/Shows",
                        "desc": "\u7efc\u827a"
                    },
                    {
                        "id": 404,
                        "cat": "TV/Documentaries",
                        "desc": "\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Animations",
                        "desc": "\u52a8\u6f2b"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "table.torrentname > tr > td:nth-child(2)",
                        "remove": "a,b,img,span",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "table.torrentname > tr > td:nth-child(2) > span"
                    },
                    "minimumratio": {
                        "text": 1
                    },
                    "minimumseedtime": {
                        "text": 90000
                    }
                }
            }
        },
        {
            "id": "zmpt",
            "name": "\u7ec7\u68a6",
            "domain": "https://zmpt.cc/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies/\u7efc\u5408-\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 422,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries/\u7efc\u5408-\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series/\u7efc\u5408-\u7535\u89c6\u5267"
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Shows/\u7efc\u5408-\u7efc\u827a"
                    },
                    {
                        "id": 417,
                        "cat": "TV/Anime",
                        "desc": "Anime China/\u52a8\u6f2b-\u56fd\u6f2b"
                    },
                    {
                        "id": 418,
                        "cat": "TV/Anime",
                        "desc": "Anime Japan/\u52a8\u6f2b-\u65e5\u6f2b"
                    },
                    {
                        "id": 419,
                        "cat": "TV/Anime",
                        "desc": "Anime Korean/\u52a8\u6f2b-\u97e9\u6f2b"
                    },
                    {
                        "id": 420,
                        "cat": "TV/Anime",
                        "desc": "Anime Europe and America/\u52a8\u6f2b-\u6b27\u7f8e"
                    },
                    {
                        "id": 421,
                        "cat": "TV/Anime",
                        "desc": "Anime Other/\u52a8\u6f2b-\u5176\u4ed6"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "selector": "img[data-orig]",
                        "attribute": "data-orig"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td.rowfollow:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td.rowfollow:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td.rowfollow:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td.rowfollow:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "div > b > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "tags": {
                        "selector": "div > a.torrents-tag"
                    },
                    "subject": {
                        "selector": "td.embedded:nth-child(2) > div > div:nth-child(2) > span",
                        "contents": -1
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2)",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2) > span"
                    }
                }
            }
        },
        {
            "id": "oshenpt",
            "name": "OshenPT",
            "domain": "https://www.oshen.win/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies/\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries/\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations/\u52a8\u6f2b"
                    },
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series/\u8fde\u7eed\u5267"
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Shows/\u7efc\u827a"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "selector": "img[data-orig]",
                        "attribute": "data-orig"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td.rowfollow:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td.rowfollow:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td.rowfollow:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td.rowfollow:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "div > b > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "tags": {
                        "selector": "div > a.torrents-tag"
                    },
                    "subject": {
                        "selector": "td.embedded:nth-child(2) > div > div:nth-child(2) > span",
                        "contents": -1
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2)",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2) > span"
                    }
                }
            }
        },
        {
            "id": "wintersakura",
            "name": "\u51ac\u6a31",
            "domain": "https://wintersakura.net/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies/\u7535\u5f71"
                    },
                    {
                        "id": 422,
                        "cat": "Movies",
                        "desc": "Animation flims/\u52a8\u6f2b\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 410,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries/\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 413,
                        "cat": "TV/Anime",
                        "desc": "Animation series/\u52a8\u6f2b\u5267\u96c6(\u5206\u96c6)"
                    },
                    {
                        "id": 423,
                        "cat": "TV/Anime",
                        "desc": "Animation series/\u52a8\u6f2b\u5267\u96c6(\u5408\u96c6)\t"
                    },
                    {
                        "id": 414,
                        "cat": "TV/Series",
                        "desc": "TV Series/\u5267\u96c6(\u5408\u96c6）"
                    },
                    {
                        "id": 402,
                        "cat": "TV/Series",
                        "desc": "TV Series/\u5267\u96c6(\u5206\u96c6）"
                    },
                    {
                        "id": 403,
                        "cat": "TV/Shows",
                        "desc": "TV Shows/\u7efc\u827a(\u5408\u96c6)"
                    },
                    {
                        "id": 418,
                        "cat": "TV/Shows",
                        "desc": "TV Shows/\u7efc\u827a(\u5206\u96c6）"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "selector": "img[data-orig]",
                        "attribute": "data-orig"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td.rowfollow:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td.rowfollow:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td.rowfollow:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td.rowfollow:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "div > b > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "tags": {
                        "selector": "div > a.torrents-tag"
                    },
                    "subject": {
                        "selector": "td.embedded:nth-child(2) > div > div:nth-child(2) > span",
                        "contents": -1
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2)",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2) > span"
                    }
                }
            }
        },
        {
            "id": "hhanclub",
            "name": "\u61a8\u61a8",
            "encoding": "UTF-8",
            "public": false,
            "proxy": false,
            "domain": "https://hhanclub.top/",
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}",
                    "search_area": 0
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "batch": {
                "delimiter": " ",
                "space_replace": "_"
            },
            "browse": {},
            "torrents": {
                "list": {
                    "selector": "div.torrents-table > div:nth-child(2) > div:nth-child(4) > div"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "div.torrent-info > div.torrent-info-text:nth-child(1)"
                    },
                    "seeders": {
                        "selector": "div.torrent-info-text > a[href*=\"#seeders\"]"
                    },
                    "leechers": {
                        "selector": "div.torrent-info-text > a[href*=\"#leechers\"]"
                    },
                    "date_elapsed": {
                        "selector": "div.torrent-info > div.torrent-info-text:nth-child(2) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "div.torrent-info > div.torrent-info-text:nth-child(2) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "span.promotion-tag-free": 0,
                            "span.promotion-tag-free2up": 0,
                            "span.promotion-tag-50pctdown": 0.5,
                            "span.promotion-tag-50pctdown2up": 0.5,
                            "span.promotion-tag-30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "span.promotion-tag-50pctdown2up": 2,
                            "span.promotion-tag-free2up": 2,
                            "span.promotion-tag-2up": 2,
                            "*": 1
                        }
                    },
                    "description": {
                        "selector": "div.torrent-title > div > div:nth-child(2) > div"
                    },
                    "labels": {
                        "selector": "div > span.tag"
                    }
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies/\u7535\u5f71"
                    },
                    {
                        "id": 405,
                        "cat": "Anime",
                        "desc": "Animations/\u52a8\u6f2b"
                    }
                ],
                "tv": [
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries/\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 405,
                        "cat": "Anime",
                        "desc": "Animations/\u52a8\u6f2b"
                    },
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series/\u8fde\u7eed\u5267"
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Shows/\u7efc\u827a"
                    }
                ]
            }
        },
        {
            "id": "carpt",
            "name": "CARPT",
            "domain": "https://carpt.net/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies/\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series/\u8fde\u7eed\u5267"
                    },
                    {
                        "id": 403,
                        "cat": "TV/Anime",
                        "desc": "Animations/\u52a8\u6f2b"
                    },
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries/\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 405,
                        "cat": "TV",
                        "desc": "TV Shows/\u7efc\u827a"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "td[class=\"embedded\"] > b > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(1)",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(1) > span"
                    }
                }
            }
        },
        {
            "id": "sharkpt",
            "name": "\u9ca8\u9c7c",
            "domain": "https://sharkpt.net/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 402,
                        "cat": "TV/Series",
                        "desc": "\u7535\u89c6\u5267"
                    },
                    {
                        "id": 403,
                        "cat": "TV/Shows",
                        "desc": "\u7efc\u827a"
                    },
                    {
                        "id": 404,
                        "cat": "TV/Documentaries",
                        "desc": "\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Animations",
                        "desc": "\u52a8\u6f2b"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "div.s-table-body-item > div.torrent-item"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title": {
                        "selector": "div.torrent-title > a"
                    },
                    "details": {
                        "selector": "div.torrent-title > a",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "shark-icon.torrent-action-download",
                        "attribute": "onclick",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "download.php\\?id=\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "size": {
                        "selector": "div.torrent-size"
                    },
                    "grabs": {
                        "selector": "div.torrent-snatches > a"
                    },
                    "seeders": {
                        "selector": "div.torrent-seeders > a"
                    },
                    "leechers": {
                        "selector": "div.torrent-leechers > a"
                    },
                    "date_elapsed": {
                        "selector": "div.torrent-when > span"
                    },
                    "date_added": {
                        "selector": "div.torrent-when > span",
                        "attribute": "title"
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "font.free": 0,
                            "font.twoupfree": 0,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "font.twoupfree": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "div.torrent-tags > font > span",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "tags": {
                        "selector": "div > a.torrents-tag"
                    },
                    "description": {
                        "selector": "div.torrent-subtitle"
                    },
                    "labels": {
                        "selector": "div.torrent-tags > span > a.s-tag"
                    }
                }
            }
        },
        {
            "id": "gainbound",
            "name": "\u4e10\u5e2e",
            "domain": "https://gainbound.net/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 410,
                        "cat": "TV",
                        "desc": "\u6e2f\u53f0\u5267"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded > span"
                    }
                }
            }
        },
        {
            "id": "ihdbits",
            "name": "iHDBits",
            "domain": "https://ihdbits.me/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies/\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries/\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations/\u52a8\u6f2b"
                    },
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series/\u8fde\u7eed\u5267"
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Shows/\u7efc\u827a"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "selector": "img[data-orig]",
                        "attribute": "data-orig"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td.rowfollow:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td.rowfollow:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td.rowfollow:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td.rowfollow:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "div > b > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "tags": {
                        "selector": "div > a.torrents-tag"
                    },
                    "subject": {
                        "selector": "td.embedded:nth-child(2) > div > div:nth-child(2) > span",
                        "contents": -1
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2)",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2) > span"
                    }
                }
            }
        },
        {
            "id": "hd",
            "name": "HDAI",
            "domain": "https://www.hd.ai/",
            "encoding": "UTF-8",
            "parser": "RenderSpider",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "Torrents.index",
                        "method": "chrome",
                        "params": {
                            "keyword": "//input[@name=\"keyword\"]",
                            "submit": "//div[@id=\"search-container\"]//button[@type=\"submit\"]",
                            "script": "document.querySelectorAll('#search-container')[0].className += \" layui-show\""
                        }
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "div.layui-table-body.layui-table-main > table tr"
                },
                "fields": {
                    "title": {
                        "selector": "a[href*=\"details.php?id=\"] > b"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?hash=\"]",
                        "attribute": "href"
                    },
                    "date_added": {
                        "selector": "td[data-field=\"added\"]",
                        "attribute": "data-content",
                        "optional": true
                    },
                    "date_elapsed": {
                        "selector": "td[data-field=\"added\"] > div",
                        "optional": true
                    },
                    "size": {
                        "selector": "td[data-field=\"size\"] > div"
                    },
                    "seeders": {
                        "selector": "td[data-field=\"seeders\"] > div"
                    },
                    "leechers": {
                        "selector": "td[data-field=\"leechers\"] > div"
                    },
                    "grabs": {
                        "selector": "td[data-field=\"times_completed\"] > div"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "description": {
                        "selector": "td[data-field=\"name\"] > div",
                        "remove": "a,section,img,span",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td[data-field=\"name\"] > div > span"
                    }
                }
            }
        },
        {
            "id": "hitpt",
            "name": "\u767e\u5ddd",
            "domain": "https://www.hitpt.com/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded > span"
                    }
                }
            }
        },
        {
            "id": "discfan",
            "name": "\u8776\u7c89",
            "domain": "https://discfan.net/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "\u4e2d\u56fd\u5927\u9646(CHN)"
                    },
                    {
                        "id": 404,
                        "cat": "Movies",
                        "desc": "\u4e2d\u56fd\u9999\u6e2f\u7279\u522b\u884c\u653f\u533a(HKG)"
                    },
                    {
                        "id": 405,
                        "cat": "Movies",
                        "desc": "\u4e2d\u56fd\u53f0\u6e7e\u7701(TWN)"
                    },
                    {
                        "id": 402,
                        "cat": "Movies",
                        "desc": "\u6cf0\u56fd(THA)"
                    },
                    {
                        "id": 403,
                        "cat": "Movies",
                        "desc": "\u65e5\u672c(JPN)"
                    },
                    {
                        "id": 406,
                        "cat": "Movies",
                        "desc": "\u97e9\u56fd(KOR)"
                    },
                    {
                        "id": 410,
                        "cat": "Movies",
                        "desc": "\u4e16\u754c(World)"
                    }
                ],
                "tv": [
                    {
                        "id": 411,
                        "cat": "TV",
                        "desc": "\u5267\u96c6(Series)"
                    },
                    {
                        "id": 413,
                        "cat": "TV/Documentary",
                        "desc": "\u8bb0\u5f55(Documentary)"
                    },
                    {
                        "id": 416,
                        "cat": "TV",
                        "desc": "\u7efc\u827a(Variety Show)"
                    },
                    {
                        "id": 419,
                        "cat": "TV/Anime",
                        "desc": "\u52a8\u6f2b(Animation)"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    }
                }
            }
        },
        {
            "id": "filelist",
            "name": "FileList",
            "domain": "https://filelist.io/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "browse.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search_field": "{keyword}",
                    "c": "M"
                }
            },
            "torrents": {
                "list": {
                    "selector": "div.visitedlinks > div.torrentrow"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "poster": {
                        "selector": "span[data-toggle=\"tooltip\"]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "<img src='([^']+)'>",
                                    1
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"browse.php?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "date_elapsed": {
                        "selector": "div:nth-child(6)",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "div:nth-child(6)",
                        "optional": true
                    },
                    "date": {
                        "selector": "div:nth-child(6)",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%H:%M:%S%d/%m/%Y"
                            }
                        ]
                    },
                    "size": {
                        "selector": "div:nth-child(7)"
                    },
                    "seeders": {
                        "selector": "div:nth-child(9)"
                    },
                    "leechers": {
                        "selector": "div:nth-child(10)"
                    },
                    "grabs": {
                        "selector": "div:nth-child(8) > span > font",
                        "contents": 0
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img[alt=\"FreeLeech\"]": 0,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img[alt=\"DoubleUp\"]": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f"
                    },
                    "minimumratio": {
                        "text": 1
                    },
                    "minimumseedtime": {
                        "text": 172800
                    }
                }
            }
        },
        {
            "id": "HDU",
            "name": "\u597d\u591a\u6cb9",
            "domain": "https://pt.hdupt.com/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded > span"
                    }
                }
            }
        },
        {
            "id": "pttime",
            "name": "PT\u65f6\u95f4",
            "domain": "https://www.pttime.org/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies(\u7535\u5f71)",
                        "default": true
                    }
                ],
                "tv": [
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series(\u7535\u89c6\u5267)",
                        "default": true
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Shows(\u7efc\u827a)",
                        "default": true
                    },
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries(\u7eaa\u5f55\u7247)",
                        "default": true
                    },
                    {
                        "id": 430,
                        "cat": "TV/Anime",
                        "desc": "Animate(3D\u52a8\u753b、2.5\u6b21\u5143)",
                        "default": true
                    },
                    {
                        "id": 431,
                        "cat": "TV/Anime",
                        "desc": "ACGN(\u4e8c\u6b21\u5143)",
                        "default": true
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "default_value": "",
                        "selector": "img.pr5",
                        "attribute": "src"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(5) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(5) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(6)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(7)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(8)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(9)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "font.promotion.free": 0,
                            "font.promotion.twoupfree": 0,
                            "font.promotion.twouphalfdown": 0.5,
                            "font.promotion.halfdown": 0.5,
                            "font.promotion.thirtypercent": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "font.promotion.twoup": 2,
                            "font.promotion.twouphalfdown": 2,
                            "font.promotion.twoupfree": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "td:nth-child(2) > table > tr > td.embedded > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td.embedded > font",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded > a > span.tags"
                    }
                }
            }
        },
        {
            "id": "ultrahd",
            "name": "ultrahd",
            "domain": "https://ultrahd.net/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                }
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded > span"
                    },
                    "minimumratio": {
                        "case": {
                            "img.hitandrun": 3,
                            "*": 0
                        }
                    },
                    "minimumseedtime": {
                        "case": {
                            "img.hitandrun": 1209600,
                            "*": 0
                        }
                    }
                }
            }
        },
        {
            "id": "hdvideo",
            "name": "HDVIDEO",
            "domain": "https://hdvideo.one/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 402,
                        "cat": "TV/Series",
                        "desc": "\u7535\u89c6\u5267"
                    },
                    {
                        "id": 403,
                        "cat": "TV/Shows",
                        "desc": "\u7efc\u827a"
                    },
                    {
                        "id": 404,
                        "cat": "TV/Documentaries",
                        "desc": "\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Animations",
                        "desc": "\u52a8\u6f2b"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "selector": "img[data-orig]",
                        "attribute": "data-orig"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td.rowfollow:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td.rowfollow:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td.rowfollow:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td.rowfollow:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "div > b > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "tags": {
                        "selector": "div > a.torrents-tag"
                    },
                    "subject": {
                        "selector": "td.embedded:nth-child(2) > div > div[style] > span",
                        "contents": -1
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(1)",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(1) > span"
                    }
                }
            }
        },
        {
            "id": "zhuque",
            "name": "\u6731\u96c0",
            "domain": "https://zhuque.in/",
            "encoding": "UTF-8",
            "parser": "TNodeSpider",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrent/search",
                        "method": "chrome",
                        "params": {
                            "keyword": "//input[@id=\"form_item_keyword\"]",
                            "submit": "//form//button[@type=\"submit\"]"
                        }
                    }
                ]
            }
        },
        {
            "id": "tjupt",
            "name": "\u5317\u6d0b\u56ed",
            "domain": "https://www.tjupt.org/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "-"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series\u5267\u96c6"
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Shows\u7efc\u827a"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations\u52a8\u6f2b"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "a[href*=\"imdb.com/title/tt\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "font.free": 0,
                            "font.twoupfree": 0,
                            "font.halfdown": 0.5,
                            "font.twouphalfdown": 0.5,
                            "font.thirtypercent": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "font.twouphalfdown": 2,
                            "font.twoupfree": 2,
                            "font.twoup": 2,
                            "*": 1
                        }
                    },
                    "description": {
                        "selector": "table.torrentname > tr:nth-child(1) > td:nth-child(2)",
                        "remove": "a, img, div",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "table.torrentname > tr:nth-child(2) > td:nth-child(2) > div#tag > font.tag"
                    },
                    "minimumratio": {
                        "text": 0.8
                    }
                }
            }
        },
        {
            "id": "hdpt",
            "name": "\u660e\u6559",
            "domain": "https://hdpt.xyz/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "selector": "img[data-orig]",
                        "attribute": "data-orig"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td.rowfollow:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td.rowfollow:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td.rowfollow:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td.rowfollow:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "div > b > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "tags": {
                        "selector": "div > a.torrents-tag"
                    },
                    "subject": {
                        "selector": "td.embedded:nth-child(2) > div > div[style] > span",
                        "contents": -1
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2)",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2) > span"
                    }
                }
            }
        },
        {
            "id": "hd4fans",
            "name": "\u517d\u7ad9",
            "domain": "https://pt.hd4fans.org/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies"
                    }
                ],
                "tv": [
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations"
                    },
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series"
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Shows"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded > span"
                    }
                }
            }
        },
        {
            "id": "jptv",
            "name": "JPTV",
            "domain": "https://jptv.club/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents/filter?search={keyword}",
                        "method": "get"
                    }
                ]
            },
            "browse": {
                "path": "torrents/filter?page={page}",
                "start": 1
            },
            "torrents": {
                "list": {
                    "selector": "div.table-responsive > table > tbody > tr"
                },
                "fields": {
                    "id": {
                        "selector": "a.view-torrent",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title": {
                        "selector": "a.view-torrent"
                    },
                    "details": {
                        "selector": "a.view-torrent",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"torrents/download/\"]",
                        "attribute": "href"
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(7) > time"
                    },
                    "size": {
                        "selector": "td:nth-child(8) > span",
                        "remove": "span"
                    },
                    "seeders": {
                        "selector": "td:nth-child(9) > a > span"
                    },
                    "leechers": {
                        "selector": "td:nth-child(10) > a > span"
                    },
                    "grabs": {
                        "selector": "td:nth-child(11) > a > span",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "*": 1
                        }
                    }
                }
            }
        },
        {
            "id": "chdbits",
            "name": "\u5f69\u8679\u5c9b",
            "domain": "https://ptchdbits.co/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies"
                    }
                ],
                "tv": [
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations"
                    },
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series"
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Shows"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "table.torrentname > tr > td.embedded > a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "table.torrentname > tr > td.embedded > a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "td[class] > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "hr_days": {
                        "defualt_value": 0,
                        "selector": "div.circle > div.circle-text",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d",
                                    0
                                ]
                            }
                        ]
                    },
                    "minimumratio": {
                        "text": "{% if fields[ 'hr_days' ] %}999999{% else %}0{% endif %}"
                    },
                    "minimumseedtime": {
                        "text": "{% if fields[ 'hr_days' ] %}{{ (fields[ 'hr_days' ]|int)*86400 }}{% else %}0{% endif %}"
                    },
                    "description": {
                        "selector": "font.subtitle",
                        "remove": "div",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "font.subtitle > div[style] > div.tag"
                    }
                }
            }
        },
        {
            "id": "nicept",
            "name": "\u8001\u5e08",
            "domain": "https://www.nicept.net/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "text": ""
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded > span"
                    }
                }
            }
        },
        {
            "id": "HDHome",
            "name": "\u5bb6\u56ed",
            "domain": "https://hdhome.org/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 411,
                        "cat": "Movies/SD",
                        "desc": "Movies SD"
                    },
                    {
                        "id": 412,
                        "cat": "Movies/SD",
                        "desc": "Movies IPad"
                    },
                    {
                        "id": 413,
                        "cat": "Movies/HD",
                        "desc": "Movies 720p"
                    },
                    {
                        "id": 414,
                        "cat": "Movies/HD",
                        "desc": "Movies 1080p"
                    },
                    {
                        "id": 415,
                        "cat": "Movies/HD",
                        "desc": "Movies REMUX"
                    },
                    {
                        "id": 450,
                        "cat": "Movies/BluRay",
                        "desc": "Movies Bluray"
                    },
                    {
                        "id": 499,
                        "cat": "Movies/BluRay",
                        "desc": "Movies UHD Blu-ray"
                    },
                    {
                        "id": 416,
                        "cat": "Movies/UHD",
                        "desc": "Movies 2160p"
                    }
                ],
                "tv": [
                    {
                        "id": 417,
                        "cat": "TV/Documentary",
                        "desc": "Doc SD"
                    },
                    {
                        "id": 418,
                        "cat": "TV/Documentary",
                        "desc": "Doc IPad"
                    },
                    {
                        "id": 419,
                        "cat": "TV/Documentary",
                        "desc": "Doc 720p"
                    },
                    {
                        "id": 420,
                        "cat": "TV/Documentary",
                        "desc": "Doc 1080p"
                    },
                    {
                        "id": 421,
                        "cat": "TV/Documentary",
                        "desc": "Doc REMUX"
                    },
                    {
                        "id": 451,
                        "cat": "TV/Documentary",
                        "desc": "Doc Bluray"
                    },
                    {
                        "id": 500,
                        "cat": "TV/Documentary",
                        "desc": "Doc UHD Blu-ray"
                    },
                    {
                        "id": 422,
                        "cat": "TV/Documentary",
                        "desc": "Doc 2160p"
                    },
                    {
                        "id": 423,
                        "cat": "TV/HD",
                        "desc": "TVMusic 720p"
                    },
                    {
                        "id": 424,
                        "cat": "TV/HD",
                        "desc": "TVMusic 1080i"
                    },
                    {
                        "id": 425,
                        "cat": "TV/SD",
                        "desc": "TVShow SD"
                    },
                    {
                        "id": 426,
                        "cat": "TV/SD",
                        "desc": "TVShow IPad"
                    },
                    {
                        "id": 471,
                        "cat": "TV/SD",
                        "desc": "TVShow IPad"
                    },
                    {
                        "id": 427,
                        "cat": "TV/HD",
                        "desc": "TVShow 720p"
                    },
                    {
                        "id": 428,
                        "cat": "TV/HD",
                        "desc": "TVShow 1080i"
                    },
                    {
                        "id": 429,
                        "cat": "TV/HD",
                        "desc": "TVShow 1080p"
                    },
                    {
                        "id": 430,
                        "cat": "TV/HD",
                        "desc": "TVShow REMUX"
                    },
                    {
                        "id": 452,
                        "cat": "TV/HD",
                        "desc": "TVShows Bluray"
                    },
                    {
                        "id": 431,
                        "cat": "TV/HD",
                        "desc": "TVShow 2160p"
                    },
                    {
                        "id": 432,
                        "cat": "TV/SD",
                        "desc": "TVSeries SD"
                    },
                    {
                        "id": 433,
                        "cat": "TV/SD",
                        "desc": "TVSeries IPad"
                    },
                    {
                        "id": 434,
                        "cat": "TV/HD",
                        "desc": "TVSeries 720p"
                    },
                    {
                        "id": 435,
                        "cat": "TV/HD",
                        "desc": "TVSeries 1080i"
                    },
                    {
                        "id": 436,
                        "cat": "TV/HD",
                        "desc": "TVSeries 1080p"
                    },
                    {
                        "id": 437,
                        "cat": "TV/HD",
                        "desc": "TVSeries REMUX"
                    },
                    {
                        "id": 453,
                        "cat": "TV/HD",
                        "desc": "TVSereis Bluray"
                    },
                    {
                        "id": 438,
                        "cat": "TV/UHD",
                        "desc": "TVSeries 2160p"
                    },
                    {
                        "id": 502,
                        "cat": "TV/UHD",
                        "desc": "TVSeries 4K Bluray"
                    },
                    {
                        "id": 444,
                        "cat": "TV/Anime",
                        "desc": "Anime SD"
                    },
                    {
                        "id": 445,
                        "cat": "TV/Anime",
                        "desc": "Anime IPad"
                    },
                    {
                        "id": 446,
                        "cat": "TV/Anime",
                        "desc": "Anime 720p"
                    },
                    {
                        "id": 447,
                        "cat": "TV/Anime",
                        "desc": "Anime 1080p"
                    },
                    {
                        "id": 448,
                        "cat": "TV/Anime",
                        "desc": "Anime REMUX"
                    },
                    {
                        "id": 454,
                        "cat": "TV/Anime",
                        "desc": "Anime Bluray"
                    },
                    {
                        "id": 449,
                        "cat": "TV/Anime",
                        "desc": "Anime 2160p"
                    },
                    {
                        "id": 501,
                        "cat": "TV/Anime",
                        "desc": "Anime UHD Blu-ray"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded > span[style]",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded > span.tags"
                    }
                }
            }
        },
        {
            "id": "monikadesign",
            "name": "\u83ab\u59ae\u5361",
            "domain": "https://monikadesign.uk/",
            "encoding": "UTF-8",
            "public": false,
            "proxy": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents?perPage=100&name={keyword}&categories[0]=6&categories[1]=7&categories[2]=5&categories[3]=1&categories[4]=8&categories[5]=2",
                        "method": "get"
                    }
                ]
            },
            "browse": {
                "path": "torrents?perPage=100&page={page}",
                "start": 1
            },
            "torrents": {
                "list": {
                    "selector": "table#torrent-list-table > tbody > tr"
                },
                "fields": {
                    "id": {
                        "selector": "a.view-torrent.torrent-listings-name",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title": {
                        "selector": "a.view-torrent.torrent-listings-name"
                    },
                    "description": {
                        "selector": "span.view-torrent.torrent-listings-subhead > b"
                    },
                    "details": {
                        "selector": "a.view-torrent.torrent-listings-name",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"/torrents/download/\"]",
                        "attribute": "href"
                    },
                    "date_elapsed": {
                        "selector": "td.torrent-listings-age > span.badge-extra"
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td.torrent-listings-size > span"
                    },
                    "seeders": {
                        "selector": "td.torrent-listings-seeders > a > span"
                    },
                    "leechers": {
                        "selector": "td.torrent-listings-leechers > a > span"
                    },
                    "grabs": {
                        "selector": "td.torrent-listings-completed > a > span"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "span.torrent-listings-freeleech": 0,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "*": 1
                        }
                    }
                }
            }
        },
        {
            "id": "PTMSG",
            "name": "\u9a6c\u6740\u9e21",
            "domain": "https://pt.msg.vg/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies/\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries/\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations/\u52a8\u6f2b"
                    },
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series/\u5267\u96c6"
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Shows/\u7efc\u827a"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td:nth-child(1)",
                        "remove": "b, a, font, span",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table > tr > td:nth-child(1) > span"
                    }
                }
            }
        },
        {
            "id": "1ptba",
            "name": "1PTBA",
            "domain": "https://1ptba.com/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 402,
                        "cat": "TV/Series",
                        "desc": "TV Series (\u5267\u96c6)"
                    },
                    {
                        "id": 403,
                        "cat": "TV/Shows",
                        "desc": "TV Shows (\u7535\u89c6\u8282\u76ee)"
                    },
                    {
                        "id": 404,
                        "cat": "TV/Documentaries",
                        "desc": "Documentaries (\u7eaa\u5b9e)"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Animations",
                        "desc": "Animations (\u52a8\u753b)"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "selector": "img[data-orig]",
                        "attribute": "data-orig"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td.rowfollow:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td.rowfollow:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td.rowfollow:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td.rowfollow:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "div > b > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "tags": {
                        "selector": "div > a.torrents-tag"
                    },
                    "subject": {
                        "selector": "td.embedded:nth-child(2) > div > div:nth-child(2) > span",
                        "contents": -1
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2)"
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2) > span",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    }
                }
            }
        },
        {
            "id": "ttg",
            "name": "\u542c\u542c\u6b4c",
            "domain": "https://totheglory.im/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "browse.php"
                    }
                ],
                "params": {
                    "search_field": "{keyword}",
                    "c": "M"
                },
                "batch": {
                    "delimiter": "+",
                    "space_replace": "+"
                }
            },
            "category": {
                "field": "search_field",
                "delimiter": " \u5206\u7c7b:",
                "movie": [
                    {
                        "id": "\u7535\u5f71DVDRip",
                        "cat": "Movies/SD"
                    },
                    {
                        "id": "\u7535\u5f71720p",
                        "cat": "Movies/HD"
                    },
                    {
                        "id": "\u7535\u5f711080i/p",
                        "cat": "Movies/HD"
                    },
                    {
                        "id": "BluRay\u539f\u76d8",
                        "cat": "Movies/BluRay"
                    },
                    {
                        "id": "\u5f71\u89c62160p",
                        "cat": "Movies/UHD"
                    },
                    {
                        "id": "UHD\u539f\u76d8",
                        "cat": "Movies/UHD"
                    }
                ],
                "tv": [
                    {
                        "id": "\u7eaa\u5f55\u7247720p",
                        "cat": "Movies/HD"
                    },
                    {
                        "id": "\u7eaa\u5f55\u72471080i/p",
                        "cat": "Movies/HD"
                    },
                    {
                        "id": "\u7eaa\u5f55\u7247BluRay\u539f\u76d8",
                        "cat": "Movies/BluRay"
                    },
                    {
                        "id": "\u6b27\u7f8e\u5267720p",
                        "cat": "TV/HD"
                    },
                    {
                        "id": "\u6b27\u7f8e\u52671080i/p",
                        "cat": "TV/HD"
                    },
                    {
                        "id": "\u9ad8\u6e05\u65e5\u5267",
                        "cat": "TV/HD"
                    },
                    {
                        "id": "\u5927\u9646\u6e2f\u53f0\u52671080i/p",
                        "cat": "TV/HD"
                    },
                    {
                        "id": "\u5927\u9646\u6e2f\u53f0\u5267720p",
                        "cat": "TV/HD"
                    },
                    {
                        "id": "\u9ad8\u6e05\u97e9\u5267",
                        "cat": "TV/HD"
                    },
                    {
                        "id": "\u6b27\u7f8e\u5267\u5305",
                        "cat": "TV/HD"
                    },
                    {
                        "id": "\u65e5\u5267\u5305",
                        "cat": "TV/HD"
                    },
                    {
                        "id": "\u97e9\u5267\u5305",
                        "cat": "TV/HD"
                    },
                    {
                        "id": "\u534e\u8bed\u5267\u5305",
                        "cat": "TV/HD"
                    },
                    {
                        "id": "\u9ad8\u6e05\u52a8\u6f2b",
                        "cat": "TV/HD"
                    },
                    {
                        "id": "\u97e9\u56fd\u7efc\u827a",
                        "cat": "TV/HD"
                    },
                    {
                        "id": "\u65e5\u672c\u7efc\u827a",
                        "cat": "TV/HD"
                    },
                    {
                        "id": "\u9ad8\u6e05\u7efc\u827a",
                        "cat": "TV/HD"
                    },
                    {
                        "id": "\u52a8\u6f2b\u539f\u76d8",
                        "cat": "TV/BluRay"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table#torrent_table tr[id]"
                },
                "fields": {
                    "id": {
                        "selector": "div.name_left > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "description_free_forever": {
                        "selector": "div.name_left > a > b > font > span"
                    },
                    "description_normal": {
                        "selector": "div.name_left > a > b > span"
                    },
                    "description": {
                        "text": "{% if fields['description_free_forever'] %}{{ fields['description_free_forever'] }}{% else %}{{ fields['description_normal'] }}{% endif %}"
                    },
                    "labels": {
                        "selector": "div.name_left > span > b"
                    },
                    "title": {
                        "selector": "div.name_left > a > b",
                        "remove": "span",
                        "contents": 0
                    },
                    "category": {
                        "selector": "tr[id] td:nth-child(1) > a > img",
                        "attribute": "alt"
                    },
                    "details": {
                        "selector": "div.name_left > a",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a.dl_a",
                        "attribute": "href"
                    },
                    "files": {
                        "selector": "td:nth-child(3)"
                    },
                    "size": {
                        "selector": "td:nth-child(7)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(9) > b > a >font"
                    },
                    "leechers": {
                        "selector": "td:nth-child(9) > b:nth-child(2) > a"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)",
                        "contents": 0
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(6)",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(5) > nobr",
                        "optional": true
                    },
                    "date": {
                        "selector": "td:nth-child(5)",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d%H:%M:%S"
                            }
                        ]
                    },
                    "imdbid": {
                        "selector": "span.imdb_rate > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img[alt=\"free\"]": 0,
                            "img[alt=\"50%\"]": 0.5,
                            "img[alt=\"30%\"]": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img[alt=\"200%\"]": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "span[onclick]",
                        "attribute": "onclick",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+\u5e74\\d+\u6708\\d+\u65e5\\d+\u70b9\\d+\u5206",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y\u5e74%m\u6708%d\u65e5%H\u70b9%M\u5206"
                            }
                        ]
                    },
                    "minimumratio": {
                        "case": {
                            "img[title=\"Hit and Run\"]": 1,
                            "*": 0
                        }
                    },
                    "minimumseedtime": {
                        "case": {
                            "img[title=\"Hit and Run\"]": 216000,
                            "*": 0
                        }
                    }
                }
            }
        },
        {
            "id": "btschool",
            "name": "\u5b66\u6821",
            "domain": "https://pt.btschool.club/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 405,
                        "cat": "Movies",
                        "desc": "\u7535\u5f71/Movies"
                    }
                ],
                "tv": [
                    {
                        "id": 406,
                        "cat": "TV",
                        "desc": "\u8fde\u7eed\u5267/TV-Series"
                    },
                    {
                        "id": 407,
                        "cat": "TV/Anime",
                        "desc": "\u52a8\u6f2b/Animation"
                    },
                    {
                        "id": 408,
                        "cat": "TV/Documentary",
                        "desc": "\u7eaa\u5f55\u7247/Documentary"
                    },
                    {
                        "id": 412,
                        "cat": "TV",
                        "desc": "\u7efc\u827a/TV-Show"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "table.torrentname > tr > td.embedded",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "table.torrentname > tr > td.embedded > span"
                    },
                    "minimumratio": {
                        "text": 1
                    },
                    "minimumseedtime": {
                        "text": 75600
                    }
                }
            }
        },
        {
            "id": "cinemageddon",
            "name": "CinemaGeddon",
            "domain": "https://cinemageddon.net/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "browse.php?search={keyword}",
                        "method": "get"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "form > table.torrenttable > tbody > tr"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "category": {
                        "selector": "a[href*=\"browse.php?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > nobr"
                    },
                    "size": {
                        "selector": "td:nth-child(5) > nobr",
                        "remove": "span"
                    },
                    "seeders": {
                        "selector": "td:nth-child(7) > b > a > font"
                    },
                    "leechers": {
                        "selector": "td:nth-child(8) > b > a"
                    },
                    "grabs": {
                        "selector": "td:nth-child(6) > a"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "*": 1
                        }
                    }
                }
            }
        },
        {
            "id": "torrentleech",
            "name": "TorrentLeech",
            "domain": "https://www.torrentleech.org/",
            "encoding": "UTF-8",
            "parser": "TorrentLeech",
            "public": false
        },
        {
            "id": "hdsky",
            "name": "\u5929\u7a7a",
            "domain": "https://hdsky.me/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies/\u7535\u5f71"
                    },
                    {
                        "id": 410,
                        "cat": "Movies",
                        "desc": "iPad/iPad\u5f71\u89c6"
                    }
                ],
                "tv": [
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series/\u5267\u96c6(\u5206\u96c6)"
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Shows/\u7efc\u827a"
                    },
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries/\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations/\u52a8\u6f2b"
                    },
                    {
                        "id": 411,
                        "cat": "TV",
                        "desc": "TV Series/\u5267\u96c6(\u5408\u96c6)"
                    },
                    {
                        "id": 412,
                        "cat": "TV",
                        "desc": "TV Series/\u6d77\u5916\u5267\u96c6(\u5206\u96c6)"
                    },
                    {
                        "id": 413,
                        "cat": "TV",
                        "desc": "TV Series/\u6d77\u5916\u5267\u96c6(\u5408\u96c6)"
                    },
                    {
                        "id": 414,
                        "cat": "TV",
                        "desc": "TV Shows/\u6d77\u5916\u7efc\u827a(\u5206\u96c6)"
                    },
                    {
                        "id": 415,
                        "cat": "TV",
                        "desc": "TV Shows/\u6d77\u5916\u7efc\u827a(\u5408\u96c6)"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "form[action*=\"/download.php?id=\"]",
                        "attribute": "action"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href"
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td.rowfollow:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded",
                        "remove": "img,a,b,span",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "[\u4f18\u60e0\u5269\u4f59\u65f6\u95f4：]",
                                    ""
                                ]
                            }
                        ]
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded > span"
                    }
                }
            }
        },
        {
            "id": "52pt",
            "name": "52pt",
            "domain": "https://52pt.site/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies/\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries/\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations/\u52a8\u6f2b"
                    },
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series/\u5267\u96c6"
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Shows/\u7efc\u827a"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded",
                        "contents": -1
                    },
                    "minimumratio": {
                        "text": 1
                    },
                    "minimumseedtime": {
                        "text": 90000
                    }
                }
            }
        },
        {
            "id": "iptorrents",
            "name": "IPT",
            "domain": "https://iptorrents.com/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "t?q={keyword}",
                        "method": "get"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table[id=\"torrents\"] tr"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"/t/\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title": {
                        "selector": "a[href*=\"/t/\"]",
                        "contents": 0
                    },
                    "category": {
                        "selector": "a[href*=\"?\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"/t/\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"/download.php/\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "lstrip",
                                "args": [
                                    "/"
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(2) > div",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(2) > div",
                        "optional": true
                    },
                    "date": {
                        "selector": "td:nth-child(2) > div",
                        "filters": [
                            {
                                "name": "split",
                                "args": [
                                    "|",
                                    1
                                ]
                            },
                            {
                                "name": "date_en_elapsed_parse"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(6)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(8)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(9)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(7)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "span.free": 0,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f"
                    },
                    "minimumratio": {
                        "text": 1
                    },
                    "minimumseedtime": {
                        "text": 1209600
                    }
                }
            }
        },
        {
            "id": "putao",
            "name": "\u8461\u8404",
            "domain": "https://pt.sjtu.edu.cn/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies CHN \u534e\u8bed\u7535\u5f71"
                    },
                    {
                        "id": 402,
                        "cat": "Movies",
                        "desc": "Movies Eng \u6b27\u7f8e\u7535\u5f71"
                    },
                    {
                        "id": 403,
                        "cat": "Movies",
                        "desc": "Movies Asian \u4e9a\u6d32\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 406,
                        "cat": "TV/Documentary",
                        "desc": "Documentary \u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 407,
                        "cat": "TV",
                        "desc": "TV Series HKTW \u6e2f\u53f0\u7535\u89c6\u5267"
                    },
                    {
                        "id": 408,
                        "cat": "TV",
                        "desc": "TV Series Asian \u4e9a\u6d32\u7535\u89c6\u5267"
                    },
                    {
                        "id": 409,
                        "cat": "TV",
                        "desc": "TV Series CHN \u5927\u9646\u7535\u89c6\u5267"
                    },
                    {
                        "id": 410,
                        "cat": "TV",
                        "desc": "TV Series Eng \u6b27\u7f8e\u7535\u89c6\u5267"
                    },
                    {
                        "id": 411,
                        "cat": "TV",
                        "desc": "TV CHN \u5927\u9646\u7efc\u827a\u8282\u76ee"
                    },
                    {
                        "id": 412,
                        "cat": "TV",
                        "desc": "TV HKTW \u6e2f\u53f0\u7efc\u827a\u8282\u76ee"
                    },
                    {
                        "id": 413,
                        "cat": "TV",
                        "desc": "TV Eng \u6b27\u7f8e\u7efc\u827a\u8282\u76ee"
                    },
                    {
                        "id": 414,
                        "cat": "TV",
                        "desc": "TV JPKR \u65e5\u97e9\u7efc\u827a\u8282\u76ee"
                    },
                    {
                        "id": 431,
                        "cat": "TV/Anime",
                        "desc": "Anime \u52a8\u6f2b"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "tr.free_bg": 0,
                            "tr.twoup_bg": 0,
                            "tr.d30down_bg": 0.3,
                            "tr.halfdown_bg": 0.5,
                            "tr.d70down_bg": 0.7,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "tr.twoup_bg": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "font[style][title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "table.torrentname > tr > td.embedded",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "table.torrentname > tr > td.embedded > span"
                    }
                }
            }
        },
        {
            "id": "hdfans",
            "name": "\u7ea2\u8c46\u996d",
            "domain": "https://hdfans.org/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies/\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series/\u7535\u89c6\u5267"
                    },
                    {
                        "id": 403,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries/\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 416,
                        "cat": "TV",
                        "desc": "TV Shows/\u7efc\u827a"
                    },
                    {
                        "id": 417,
                        "cat": "TV/Anime",
                        "desc": "Animations/\u52a8\u6f2b"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "td[class=\"embedded\"] > font > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "table.torrentname > tr > td:nth-child(2)",
                        "remove": "a,img,span",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "table.torrentname > tr > td:nth-child(2) > span"
                    }
                }
            }
        },
        {
            "id": "nanyangpt",
            "name": "\u5357\u6d0b",
            "domain": "https://nanyangpt.com/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > form > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded > span"
                    }
                }
            }
        },
        {
            "id": "uploads",
            "name": "Uploads",
            "domain": "http://uploads.ltd/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 402,
                        "cat": "TV/Series",
                        "desc": "\u7535\u89c6\u5267"
                    },
                    {
                        "id": 403,
                        "cat": "TV/Shows",
                        "desc": "\u7efc\u827a"
                    },
                    {
                        "id": 404,
                        "cat": "TV/Documentaries",
                        "desc": "\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Animations",
                        "desc": "\u52a8\u6f2b"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "table.torrentname > tr > td:nth-child(2)",
                        "remove": "a,b,img,span",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "table.torrentname > tr > td:nth-child(2) > span"
                    },
                    "minimumratio": {
                        "text": 1
                    },
                    "minimumseedtime": {
                        "text": 90000
                    }
                }
            }
        },
        {
            "id": "hdbd",
            "name": "\u4f0a\u7538\u56ed",
            "domain": "https://pt.hdbd.us/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "img[title][src=\"pic/cattrans.gif\"]",
                        "attribute": "title"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "text": ""
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded:has(\"a[title]\")",
                        "remove": "span, a, b"
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded:has(\"a[title]\") > span"
                    }
                }
            }
        },
        {
            "id": "beitai",
            "name": "\u5907\u80ce",
            "domain": "https://www.beitai.pt/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies/\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries/\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations/\u52a8\u6f2b"
                    },
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series/\u5267\u96c6"
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Shows/\u7efc\u827a"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded",
                        "contents": -1
                    }
                }
            }
        },
        {
            "id": "mteam",
            "name": "\u9992\u5934",
            "domain": "https://kp.m-team.cc/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies/SD",
                        "desc": "Movie(\u96fb\u5f71)/SD",
                        "default": true
                    },
                    {
                        "id": 419,
                        "cat": "Movies/HD",
                        "desc": "Movie(\u96fb\u5f71)/HD",
                        "default": true
                    },
                    {
                        "id": 420,
                        "cat": "Movies/DVD",
                        "desc": "Movie(\u96fb\u5f71)/DVDiSo",
                        "default": true
                    },
                    {
                        "id": 421,
                        "cat": "Movies/BluRay",
                        "desc": "Movie(\u96fb\u5f71)/Blu-Ray",
                        "default": true
                    },
                    {
                        "id": 439,
                        "cat": "Movies/Other",
                        "desc": "Movie(\u96fb\u5f71)/Remux",
                        "default": true
                    }
                ],
                "tv": [
                    {
                        "id": 403,
                        "cat": "TV/SD",
                        "desc": "TV Series(\u5f71\u5287/\u7d9c\u85dd)/SD",
                        "default": true
                    },
                    {
                        "id": 402,
                        "cat": "TV/HD",
                        "desc": "TV Series(\u5f71\u5287/\u7d9c\u85dd)/HD",
                        "default": true
                    },
                    {
                        "id": 435,
                        "cat": "TV/SD",
                        "desc": "TV Series(\u5f71\u5287/\u7d9c\u85dd)/DVDiSo",
                        "default": true
                    },
                    {
                        "id": 438,
                        "cat": "TV/HD",
                        "desc": "TV Series(\u5f71\u5287/\u7d9c\u85dd)/BD",
                        "default": true
                    },
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "\u7d00\u9304\u6559\u80b2",
                        "default": true
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Anime(\u52d5\u756b)",
                        "default": true
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"] > b"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "selector": "img[alt=\"torrent thumbnail\"]",
                        "attribute": "src",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "pic/nopic.jpg",
                                    ""
                                ]
                            }
                        ]
                    },
                    "imdbid": {
                        "selector": "a[href*=\"imdb.com/title/tt\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "size": {
                        "selector": "td.rowfollow:nth-last-child(6)"
                    },
                    "grabs": {
                        "selector": "td.rowfollow:nth-last-child(3)"
                    },
                    "seeders": {
                        "selector": "td.rowfollow:nth-last-child(5)"
                    },
                    "leechers": {
                        "selector": "td.rowfollow:nth-last-child(4)"
                    },
                    "date_added": {
                        "selector": "td.rowfollow:nth-last-child(7) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date_elapsed": {
                        "selector": "tr > td > span",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "span[style=\"font-weight:normal\"]",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "(?:\u9650\u6642：\\s*)((?:\\d+\u65e5)?(?:\\d+\u6642)?(?:\\d+\u5206)?)",
                                    1
                                ]
                            },
                            {
                                "name": "date_elapsed_parse"
                            }
                        ]
                    },
                    "description": {
                        "selector": "table.torrentname > tr > td.embedded",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "table.torrentname > tr > td.embedded > img[class*=\"label_\"]",
                        "attribute": "alt"
                    }
                }
            }
        },
        {
            "id": "xpmteam-porn",
            "name": "\u9992\u5934(Porn)",
            "domain": "https://xp.m-team.cc/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "adult.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                }
            },
            "category": {
                "adult": [
                    {
                        "id": 410,
                        "cat": "Adults/HD-Censored",
                        "desc": "\u9ad8\u6e05(\u6709\u78bc)/HD-Censored",
                        "default": true
                    },
                    {
                        "id": 429,
                        "cat": "Adults/HD-Uncensored",
                        "desc": "\u9ad8\u6e05(\u7121\u78bc)/HD-Uncensored",
                        "default": true
                    },
                    {
                        "id": 424,
                        "cat": "Adults/SD-Censored",
                        "desc": "\u6a19\u6e05(\u6709\u78bc)/SD-Censored",
                        "default": true
                    },
                    {
                        "id": 430,
                        "cat": "Adults/SD-Uncensored",
                        "desc": "\u6a19\u6e05(\u7121\u78bc)/SD-Uncensored",
                        "default": true
                    },
                    {
                        "id": 431,
                        "cat": "Adults/SD-Censored",
                        "desc": "\u85cd\u5149(\u6709\u78bc)/UHD-Censored",
                        "default": true
                    },
                    {
                        "id": 432,
                        "cat": "Adults/SD-Uncensored",
                        "desc": "\u85cd\u5149(\u7121\u78bc)/UHD-Uncensored",
                        "default": true
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"] > b"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "selector": "img[alt=\"torrent thumbnail\"]",
                        "attribute": "src",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "pic/nopic.jpg",
                                    ""
                                ]
                            }
                        ]
                    },
                    "imdbid": {
                        "selector": "a[href*=\"imdb.com/title/tt\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "size": {
                        "selector": "td.rowfollow:nth-last-child(6)"
                    },
                    "grabs": {
                        "selector": "td.rowfollow:nth-last-child(3)"
                    },
                    "seeders": {
                        "selector": "td.rowfollow:nth-last-child(5)"
                    },
                    "leechers": {
                        "selector": "td.rowfollow:nth-last-child(4)"
                    },
                    "date_added": {
                        "selector": "td.rowfollow:nth-last-child(7) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date_elapsed": {
                        "selector": "tr > td > span",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "span[style=\"font-weight:normal\"]",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "(?:\u9650\u6642：\\s*)((?:\\d+\u65e5)?(?:\\d+\u6642)?(?:\\d+\u5206)?)",
                                    1
                                ]
                            },
                            {
                                "name": "date_elapsed_parse"
                            }
                        ]
                    },
                    "description": {
                        "selector": "table.torrentname > tr > td.embedded",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "table.torrentname > tr > td.embedded > img[class*=\"label_\"]",
                        "attribute": "alt"
                    }
                }
            }
        },
        {
            "id": "eastgame",
            "name": "\u5410\u9c81\u756a",
            "domain": "https://pt.eastgame.org/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded > span"
                    }
                }
            }
        },
        {
            "id": "HDTime",
            "name": "\u9ad8\u6e05\u65f6\u95f4",
            "domain": "https://hdtime.org/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies/\u7535\u5f71"
                    },
                    {
                        "id": 424,
                        "cat": "Movies/BluRay",
                        "desc": "Blu-Ray\u539f\u76d8"
                    }
                ],
                "tv": [
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series/\u5267\u96c6"
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Shows/\u7efc\u827a"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations/\u52a8\u6f2b"
                    },
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries/\u7eaa\u5f55\u7247"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td:nth-child(2)",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table > tr > td:nth-child(2) > span"
                    }
                }
            }
        },
        {
            "id": "2xfree",
            "name": "2xFree",
            "domain": "https://pt.2xfree.org/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies(\u7535\u5f71)",
                        "default": true
                    },
                    {
                        "id": 526,
                        "cat": "Movies",
                        "desc": "VRMovies(3D/VR\u7535\u5f71)",
                        "default": true
                    }
                ],
                "tv": [
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series(\u7535\u89c6\u5267)",
                        "default": true
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Shows(\u7efc\u827a)",
                        "default": true
                    },
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries(\u7eaa\u5f55\u7247)",
                        "default": true
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations(\u52a8\u753b)",
                        "default": true
                    },
                    {
                        "id": 527,
                        "cat": "TV",
                        "desc": "VRSeries(3D/VR\u5267\u96c6)",
                        "default": true
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "selector": "img[data-orig]",
                        "attribute": "data-orig"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td.rowfollow:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td.rowfollow:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td.rowfollow:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td.rowfollow:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "div > b > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "tags": {
                        "selector": "div > a.torrents-tag"
                    },
                    "subject": {
                        "selector": "td.embedded:nth-child(2) > div > div:nth-child(2) > span",
                        "contents": -1
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2)",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2) > span"
                    }
                }
            }
        },
        {
            "id": "ssd",
            "name": "\u6625\u5929",
            "domain": "https://springsunday.net/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 501,
                        "cat": "Movies",
                        "desc": "Movies(\u7535\u5f71)"
                    }
                ],
                "tv": [
                    {
                        "id": 502,
                        "cat": "TV",
                        "desc": "TV Series(\u5267\u96c6)"
                    },
                    {
                        "id": 503,
                        "cat": "TV/Documentary",
                        "desc": "Docs(\u7eaa\u5f55)"
                    },
                    {
                        "id": 504,
                        "cat": "TV/Anime",
                        "desc": "Animations(\u52a8\u753b)"
                    },
                    {
                        "id": 505,
                        "cat": "TV",
                        "desc": "TV Shows(\u7efc\u827a)"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "a[href*=\"imdb.com/title/tt\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td.rowfollow:nth-last-child(6) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td.rowfollow:nth-last-child(6) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td.rowfollow:nth-last-child(5)"
                    },
                    "seeders": {
                        "selector": "td.rowfollow:nth-last-child(4)"
                    },
                    "leechers": {
                        "selector": "td.rowfollow:nth-last-child(3)"
                    },
                    "grabs": {
                        "selector": "td.rowfollow:nth-last-child(2)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "table.torrentname > tr > td > div.torrent-smalldescr",
                        "remove": "a, b, img, span",
                        "contents": 0
                    },
                    "labels": {
                        "selector": "table.torrentname > tr > td > div.torrent-smalldescr > a > span"
                    }
                }
            }
        },
        {
            "id": "audiences",
            "name": "\u89c2\u4f17",
            "domain": "https://audiences.me/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "\u7535\u5f71/Movies"
                    }
                ],
                "tv": [
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "\u5267\u96c6/TV-Series"
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "\u7efc\u827a/TV-Show"
                    },
                    {
                        "id": 406,
                        "cat": "TV/Documentary",
                        "desc": "\u7eaa\u5f55\u7247/Documentary"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td.embedded > span[style]"
                    },
                    "labels": {
                        "selector": "td.embedded > span.tags"
                    }
                }
            }
        },
        {
            "id": "dragonhd",
            "name": "\u9f99\u4e4b\u5bb6",
            "domain": "https://www.dragonhd.xyz/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded > span"
                    }
                }
            }
        },
        {
            "id": "hdchina",
            "name": "\u74f7\u5668",
            "domain": "https://www.hdchina.org/",
            "encoding": "UTF-8",
            "render": true,
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 20,
                        "cat": "Movies/BluRay",
                        "desc": "Movie Full BD"
                    },
                    {
                        "id": 17,
                        "cat": "Movies/HD",
                        "desc": "Movie 1080p"
                    },
                    {
                        "id": 16,
                        "cat": "Movies/HD",
                        "desc": "Movie 1080i"
                    },
                    {
                        "id": 9,
                        "cat": "Movies/HD",
                        "desc": "Movie 720p"
                    },
                    {
                        "id": 27,
                        "cat": "Movies/SD",
                        "desc": "iPad Video"
                    }
                ],
                "tv": [
                    {
                        "id": 13,
                        "cat": "TV",
                        "desc": "EU/US TV series"
                    },
                    {
                        "id": 25,
                        "cat": "TV",
                        "desc": "Chinese TV series"
                    },
                    {
                        "id": 26,
                        "cat": "TV",
                        "desc": "Kor Drama"
                    },
                    {
                        "id": 24,
                        "cat": "TV",
                        "desc": "Jpn Drama"
                    },
                    {
                        "id": 21,
                        "cat": "TV",
                        "desc": "EU/US TV series pack"
                    },
                    {
                        "id": 22,
                        "cat": "TV",
                        "desc": "Chinese TV series pack"
                    },
                    {
                        "id": 23,
                        "cat": "TV",
                        "desc": "JPN/KOR drama pack"
                    },
                    {
                        "id": 5,
                        "cat": "TV/Documentary",
                        "desc": "Documentary"
                    },
                    {
                        "id": 14,
                        "cat": "TV/Anime",
                        "desc": "Animation"
                    },
                    {
                        "id": 401,
                        "cat": "TV",
                        "desc": "TV Shows"
                    },
                    {
                        "id": 411,
                        "cat": "TV",
                        "desc": "Travel"
                    },
                    {
                        "id": 412,
                        "cat": "TV",
                        "desc": "Food"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrent_list tr:has(\"td.t_cat\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "description": {
                        "selector": "table.tbname tr > td:nth-child(2) > h4"
                    },
                    "labels": {
                        "selector": "table.tbname tr > td:nth-child(2) > h4 > span"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?hash=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td.t_size"
                    },
                    "grabs": {
                        "selector": "td.t_completed"
                    },
                    "seeders": {
                        "selector": "td.t_torrents"
                    },
                    "leechers": {
                        "selector": "td.t_leech"
                    },
                    "date_elapsed": {
                        "selector": "td.t_time > span"
                    },
                    "date_added": {
                        "selector": "td.t_time > span",
                        "attribute": "title"
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "csrf": {
                        "selector": "meta[name=\"x-csrf\"]",
                        "attribute": "content"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    }
                }
            }
        },
        {
            "id": "U2",
            "name": "\u5e7c\u513f\u56ed",
            "domain": "https://u2.dmhy.org/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 9,
                        "cat": "Movies/Other",
                        "desc": "U2-Rip"
                    },
                    {
                        "id": 411,
                        "cat": "Movies/Other",
                        "desc": "U2-RBD"
                    },
                    {
                        "id": 413,
                        "cat": "Movies/Other",
                        "desc": "Web"
                    },
                    {
                        "id": 12,
                        "cat": "Movies/HD",
                        "desc": "BDRip"
                    },
                    {
                        "id": 13,
                        "cat": "Movies/Other",
                        "desc": "DVDRip"
                    },
                    {
                        "id": 14,
                        "cat": "Movies/Other",
                        "desc": "HDTVRip"
                    },
                    {
                        "id": 15,
                        "cat": "Movies/Other",
                        "desc": "DVDISO"
                    },
                    {
                        "id": 16,
                        "cat": "Movies/BluRay",
                        "desc": "BDMV"
                    },
                    {
                        "id": 17,
                        "cat": "Movies/Other",
                        "desc": "LQRip"
                    },
                    {
                        "id": 412,
                        "cat": "Movies/BluRay",
                        "desc": "\u52a0\u6d41\u91cd\u704c (Modded Blu-rays)"
                    }
                ],
                "tv": [
                    {
                        "id": 9,
                        "cat": "TV/Anime",
                        "desc": "U2-Rip"
                    },
                    {
                        "id": 411,
                        "cat": "TV/Anime",
                        "desc": "U2-RBD"
                    },
                    {
                        "id": 413,
                        "cat": "TV/Anime",
                        "desc": "Web"
                    },
                    {
                        "id": 12,
                        "cat": "TV/Anime",
                        "desc": "BDRip"
                    },
                    {
                        "id": 13,
                        "cat": "TV/Anime",
                        "desc": "DVDRip"
                    },
                    {
                        "id": 14,
                        "cat": "TV/Anime",
                        "desc": "HDTVRip"
                    },
                    {
                        "id": 15,
                        "cat": "TV/Anime",
                        "desc": "DVDISO"
                    },
                    {
                        "id": 16,
                        "cat": "TV/Anime",
                        "desc": "BDMV"
                    },
                    {
                        "id": 17,
                        "cat": "TV/Anime",
                        "desc": "LQRip"
                    },
                    {
                        "id": 410,
                        "cat": "TV/Anime",
                        "desc": "\u5916\u6302\u7ed3\u6784 (TV Series)"
                    },
                    {
                        "id": 412,
                        "cat": "TV/Anime",
                        "desc": "\u52a0\u6d41\u91cd\u704c (Modded Blu-rays)"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > time",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > time",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "td > b > time[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded > span"
                    }
                }
            }
        },
        {
            "id": "hdatmos",
            "name": "\u963f\u7ae5\u6728",
            "domain": "https://hdatmos.club/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies/\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries/\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations/\u52a8\u6f2b"
                    },
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series/\u7535\u89c6\u5267"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_2up": 2,
                            "img.pro_free2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "font.free,font.twoupfree,font.halfdown,font.twouphalfdown",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "table.torrentname > tr > td:nth-child(1)",
                        "remove": "a,img,b,font",
                        "contents": -1
                    }
                }
            }
        },
        {
            "id": "0ff",
            "name": "\u81ea\u7531\u519c\u573a",
            "domain": "https://pt.0ff.cc/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "selector": "img[data-orig]",
                        "attribute": "data-orig"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td.rowfollow:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td.rowfollow:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td.rowfollow:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td.rowfollow:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "div > b > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "tags": {
                        "selector": "div > a.torrents-tag"
                    },
                    "subject": {
                        "selector": "td.embedded:nth-child(2) > div > div[style] > span",
                        "contents": -1
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2)",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2) > span"
                    }
                }
            }
        },
        {
            "id": "HDarea",
            "name": "\u9ad8\u6e05\u89c6\u754c",
            "domain": "https://hdarea.club/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 300,
                        "cat": "Movies/UHD",
                        "desc": "Movies UHD-4K"
                    },
                    {
                        "id": 401,
                        "cat": "Movies/BluRay",
                        "desc": "Movies Blu-ray"
                    },
                    {
                        "id": 415,
                        "cat": "Movies/HD",
                        "desc": "Movies REMUX"
                    },
                    {
                        "id": 416,
                        "cat": "Movies/3D",
                        "desc": "Movies 3D"
                    },
                    {
                        "id": 410,
                        "cat": "Movies/HD",
                        "desc": "Movies 1080p"
                    },
                    {
                        "id": 411,
                        "cat": "Movies/HD",
                        "desc": "Movies 720p"
                    },
                    {
                        "id": 414,
                        "cat": "Movies/DVD",
                        "desc": "Movies DVD"
                    },
                    {
                        "id": 412,
                        "cat": "Movies/WEB-DL",
                        "desc": "Movies WEB-DL"
                    },
                    {
                        "id": 413,
                        "cat": "Movies/HD",
                        "desc": "Movies HDTV"
                    },
                    {
                        "id": 417,
                        "cat": "Movies/Other",
                        "desc": "Movies iPad"
                    }
                ],
                "tv": [
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations"
                    },
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series"
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Shows"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded",
                        "contents": -1
                    }
                }
            }
        },
        {
            "id": "joyhd",
            "name": "\u5f00\u5fc3",
            "domain": "https://www.joyhd.net/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "\u7535\u5f71Movies"
                    }
                ],
                "tv": [
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "\u5267\u96c6TV Series"
                    },
                    {
                        "id": 403,
                        "cat": "TV/Other",
                        "desc": "\u7efc\u827aTV Shows"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "\u52a8\u6f2bAnimations"
                    },
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "\u7eaa\u5f55\u7247Documentaries"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded > span"
                    }
                }
            }
        },
        {
            "id": "TCCF",
            "name": "\u4ed6\u5439\u5439\u98ce",
            "domain": "https://et8.org/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table > tr > td.embedded > span"
                    }
                }
            }
        },
        {
            "id": "icc2022",
            "name": "\u51b0\u6dc7\u6dcb",
            "domain": "https://www.icc2022.com/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies/\u7535\u5f71",
                        "default": true
                    }
                ],
                "tv": [
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries/\u7eaa\u5f55\u7247",
                        "default": true
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations/\u52a8\u6f2b",
                        "default": true
                    },
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series/\u7535\u89c6\u5267",
                        "default": true
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Shows/\u7efc\u827a",
                        "default": true
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    ""
                                ]
                            },
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "table.torrentname > tr > td:nth-child(2)",
                        "remove": "a,b,img,span",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "table.torrentname > tr > td:nth-child(2) > span"
                    },
                    "minimumratio": {
                        "text": 1
                    },
                    "minimumseedtime": {
                        "text": 90000
                    }
                }
            }
        },
        {
            "id": "skyeysnow",
            "name": "\u5929\u96ea",
            "domain": "https://skyeysnow.com/",
            "encoding": "UTF-8",
            "public": false,
            "proxy": false,
            "search": {
                "paths": [
                    {
                        "path": "forum.php?mod=torrents&cat=1&search={keyword}",
                        "method": "get"
                    }
                ]
            },
            "browse": {
                "path": "forum.php?mod=torrents&page={page}"
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tbody > tr:has(\"td.rowfollow\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"/download.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title": {
                        "selector": "table.torrentname > tbody > tr > td > a[title]",
                        "attribute": "title"
                    },
                    "details": {
                        "selector": "table.torrentname > tbody > tr > td > a[title]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"/download.php?id=\"]",
                        "attribute": "href"
                    },
                    "date_added": {
                        "selector": "td:nth-child(3)"
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(4)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(7)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(6)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(5)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.sp_4": 0,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "*": 1
                        }
                    }
                }
            }
        },
        {
            "id": "ptsbao",
            "name": "\u70e7\u5305\u4e50\u56ed",
            "domain": "https://ptsbao.club/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies(\u7535\u5f71)"
                    }
                ],
                "tv": [
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series(\u7535\u89c6\u5267)"
                    },
                    {
                        "id": 403,
                        "cat": "TV/Other",
                        "desc": "TV Shows(\u7535\u89c6\u8282\u76ee)"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations(\u52a8\u6f2b)"
                    },
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries(\u8bb0\u5f55\u7247)"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"torrents.php?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td:nth-child(6)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(9)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(7)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(8)"
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(5) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(5) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "td[class=\"embedded\"] > font > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "table.torrentname > td",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "table.torrentname > td > span"
                    }
                }
            }
        },
        {
            "id": "pterclub",
            "name": "\u732b\u7ad9",
            "domain": "https://pterclub.com/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "\u7535\u5f71 (Movie)"
                    }
                ],
                "tv": [
                    {
                        "id": 404,
                        "cat": "TV",
                        "desc": "\u7535\u89c6\u5267 (TV Play)"
                    },
                    {
                        "id": 403,
                        "cat": "TV/Anime",
                        "desc": "\u52a8\u6f2b (Anime)"
                    },
                    {
                        "id": 405,
                        "cat": "TV",
                        "desc": "\u7efc\u827a (TV Show)"
                    },
                    {
                        "id": 402,
                        "cat": "TV/Documentary",
                        "desc": "\u7eaa\u5f55\u7247 (Documentary)"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title": {
                        "selector": "td:nth-child(2) > div > div:nth-child(1) > a > b"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "selector": "img[data-orig]",
                        "attribute": "data-orig"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td.rowfollow:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td.rowfollow:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td.rowfollow:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td.rowfollow:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "div > b > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "description": {
                        "selector": "td:nth-child(2) > div > div:nth-child(2) > span"
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > div > div:nth-child(2) > a.torrents-tag"
                    }
                }
            }
        },
        {
            "id": "xpmteam",
            "name": "\u9992\u5934\u65b0\u57df\u540d",
            "domain": "https://xp.m-team.io/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies/SD",
                        "desc": "Movie(\u96fb\u5f71)/SD",
                        "default": true
                    },
                    {
                        "id": 419,
                        "cat": "Movies/HD",
                        "desc": "Movie(\u96fb\u5f71)/HD",
                        "default": true
                    },
                    {
                        "id": 420,
                        "cat": "Movies/DVD",
                        "desc": "Movie(\u96fb\u5f71)/DVDiSo",
                        "default": true
                    },
                    {
                        "id": 421,
                        "cat": "Movies/BluRay",
                        "desc": "Movie(\u96fb\u5f71)/Blu-Ray",
                        "default": true
                    },
                    {
                        "id": 439,
                        "cat": "Movies/Other",
                        "desc": "Movie(\u96fb\u5f71)/Remux",
                        "default": true
                    }
                ],
                "tv": [
                    {
                        "id": 403,
                        "cat": "TV/SD",
                        "desc": "TV Series(\u5f71\u5287/\u7d9c\u85dd)/SD",
                        "default": true
                    },
                    {
                        "id": 402,
                        "cat": "TV/HD",
                        "desc": "TV Series(\u5f71\u5287/\u7d9c\u85dd)/HD",
                        "default": true
                    },
                    {
                        "id": 435,
                        "cat": "TV/SD",
                        "desc": "TV Series(\u5f71\u5287/\u7d9c\u85dd)/DVDiSo",
                        "default": true
                    },
                    {
                        "id": 438,
                        "cat": "TV/HD",
                        "desc": "TV Series(\u5f71\u5287/\u7d9c\u85dd)/BD",
                        "default": true
                    },
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "\u7d00\u9304\u6559\u80b2",
                        "default": true
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Anime(\u52d5\u756b)",
                        "default": true
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"] > b"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "selector": "img[alt=\"torrent thumbnail\"]",
                        "attribute": "src",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "pic/nopic.jpg",
                                    ""
                                ]
                            }
                        ]
                    },
                    "imdbid": {
                        "selector": "a[href*=\"imdb.com/title/tt\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "size": {
                        "selector": "td.rowfollow:nth-last-child(6)"
                    },
                    "grabs": {
                        "selector": "td.rowfollow:nth-last-child(3)"
                    },
                    "seeders": {
                        "selector": "td.rowfollow:nth-last-child(5)"
                    },
                    "leechers": {
                        "selector": "td.rowfollow:nth-last-child(4)"
                    },
                    "date_added": {
                        "selector": "td.rowfollow:nth-last-child(7) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date_elapsed": {
                        "selector": "tr > td > span",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "span[style=\"font-weight:normal\"]",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "(?:\u9650\u6642：\\s*)((?:\\d+\u65e5)?(?:\\d+\u6642)?(?:\\d+\u5206)?)",
                                    1
                                ]
                            },
                            {
                                "name": "date_elapsed_parse"
                            }
                        ]
                    },
                    "description": {
                        "selector": "table.torrentname > tr > td.embedded",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "table.torrentname > tr > td.embedded > img[class*=\"label_\"]",
                        "attribute": "alt"
                    }
                }
            }
        },
        {
            "id": "zhuque",
            "name": "\u6731\u96c0\u65b0\u57df\u540d",
            "domain": "https://zhuque.in/",
            "encoding": "UTF-8",
            "parser": "TNodeSpider",
            "public": false,
            "search": {
                "paths": {
                    "path": "torrent/search",
                    "method": "chrome",
                    "params": {
                        "keyword": "//input[@id=\"form_item_keyword\"]",
                        "submit": "//form//button[@type=\"submit\"]"
                    }
                }
            }
        },
        {
            "id": "rousi",
            "name": "\u8089\u4e1d",
            "domain": "https://rousi.zip/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 411,
                        "cat": "Movies/SD",
                        "desc": "Movies SD"
                    },
                    {
                        "id": 412,
                        "cat": "Movies",
                        "desc": "Movies IPad"
                    },
                    {
                        "id": 413,
                        "cat": "Movies/HD",
                        "desc": "Movies 720p"
                    },
                    {
                        "id": 414,
                        "cat": "Movies/HD",
                        "desc": "Movies 1080p"
                    },
                    {
                        "id": 415,
                        "cat": "Movies",
                        "desc": "Movies REMUX"
                    },
                    {
                        "id": 450,
                        "cat": "Movies/BluRay",
                        "desc": "Movies Bluray"
                    },
                    {
                        "id": 499,
                        "cat": "Movies/UHD",
                        "desc": "Movies UHD Blu-ray"
                    },
                    {
                        "id": 416,
                        "cat": "Movies/UHD",
                        "desc": "Movies 2160p"
                    }
                ],
                "tv": [
                    {
                        "id": 417,
                        "cat": "TV/Documentary",
                        "desc": "Doc SD"
                    },
                    {
                        "id": 418,
                        "cat": "TV/Documentary",
                        "desc": "Doc IPad"
                    },
                    {
                        "id": 419,
                        "cat": "TV/Documentary",
                        "desc": "Doc 720p"
                    },
                    {
                        "id": 420,
                        "cat": "TV/Documentary",
                        "desc": "Doc 1080p"
                    },
                    {
                        "id": 421,
                        "cat": "TV/Documentary",
                        "desc": "Doc REMUX"
                    },
                    {
                        "id": 451,
                        "cat": "TV/Documentary",
                        "desc": "Doc Bluray"
                    },
                    {
                        "id": 500,
                        "cat": "TV/Documentary",
                        "desc": "Doc UHD Blu-ray"
                    },
                    {
                        "id": 422,
                        "cat": "TV/Documentary",
                        "desc": "Doc 2160p"
                    },
                    {
                        "id": 425,
                        "cat": "TV/SD",
                        "desc": "TVShow SD"
                    },
                    {
                        "id": 426,
                        "cat": "TV",
                        "desc": "TVShow IPad"
                    },
                    {
                        "id": 471,
                        "cat": "TV",
                        "desc": "TVShow IPad"
                    },
                    {
                        "id": 427,
                        "cat": "TV/HD",
                        "desc": "TVShow 720p"
                    },
                    {
                        "id": 472,
                        "cat": "TV/HD",
                        "desc": "TVShow 720p"
                    },
                    {
                        "id": 428,
                        "cat": "TV/HD",
                        "desc": "TVShow 1080i"
                    },
                    {
                        "id": 429,
                        "cat": "TV/HD",
                        "desc": "TVShow 1080p"
                    },
                    {
                        "id": 430,
                        "cat": "TV/HD",
                        "desc": "TVShow REMUX"
                    },
                    {
                        "id": 452,
                        "cat": "TV/HD",
                        "desc": "TVShow Bluray"
                    },
                    {
                        "id": 431,
                        "cat": "TV/UHD",
                        "desc": "TVShow 2160p"
                    },
                    {
                        "id": 432,
                        "cat": "TV/SD",
                        "desc": "TVSeries SD"
                    },
                    {
                        "id": 433,
                        "cat": "TV",
                        "desc": "TVSeries IPad"
                    },
                    {
                        "id": 434,
                        "cat": "TV/HD",
                        "desc": "TVSeries 720p"
                    },
                    {
                        "id": 435,
                        "cat": "TV/HD",
                        "desc": "TVSeries 1080i"
                    },
                    {
                        "id": 436,
                        "cat": "TV/HD",
                        "desc": "TVSeries 1080p"
                    },
                    {
                        "id": 437,
                        "cat": "TV",
                        "desc": "TVSeries REMUX"
                    },
                    {
                        "id": 453,
                        "cat": "TV/HD",
                        "desc": "TVSeries Bluray"
                    },
                    {
                        "id": 438,
                        "cat": "TV/UHD",
                        "desc": "TVSeries 2160p"
                    },
                    {
                        "id": 444,
                        "cat": "TV/Anime",
                        "desc": "Anime SD"
                    },
                    {
                        "id": 445,
                        "cat": "TV/Anime",
                        "desc": "Anime IPad"
                    },
                    {
                        "id": 446,
                        "cat": "TV/Anime",
                        "desc": "Anime 720p"
                    },
                    {
                        "id": 447,
                        "cat": "TV/Anime",
                        "desc": "Anime 1080p"
                    },
                    {
                        "id": 448,
                        "cat": "TV/Anime",
                        "desc": "Anime REMUX"
                    },
                    {
                        "id": 454,
                        "cat": "TV/Anime",
                        "desc": "Anime Bluray"
                    },
                    {
                        "id": 449,
                        "cat": "TV/Anime",
                        "desc": "Anime 2160p"
                    },
                    {
                        "id": 501,
                        "cat": "TV/Anime",
                        "desc": "Anime UHD Blu-ray"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "filters": [
                        {
                            "name": "replace",
                            "args": [
                                "?",
                                "",
                                {
                                    "name": "querystring",
                                    "args": "cat"
                                }
                            ]
                        }
                    ],
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "tags": {
                        "selector": "div > a.torrents-tag"
                    },
                    "subject": {
                        "selector": "td.embedded:nth-child(2) > div > div:nth-child(2) > span",
                        "contents": -1
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2)",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2) > span[title=\"\"]"
                    }
                }
            }
        },
        {
            "id": "ptcafe",
            "name": "\u5496\u5561",
            "domain": "https://ptcafe.club",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "batch": {
                "delimiter": " ",
                "space_replace": "_"
            },
            "browse": {},
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "selector": "img[data-orig]",
                        "attribute": "data-orig"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td.rowfollow:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td.rowfollow:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td.rowfollow:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td.rowfollow:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "div > b > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "tags": {
                        "selector": "div > a.torrents-tag"
                    },
                    "subject": {
                        "selector": "td.embedded:nth-child(2) > div > div:nth-child(2) > span",
                        "contents": -1
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2)",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2) > span"
                    }
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies/\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries/\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations/\u52a8\u6f2b"
                    },
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series/\u8fde\u7eed\u5267"
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Shows/\u7efc\u827a"
                    }
                ]
            }
        },
        {
            "id": "pandapt",
            "name": "\u718a\u732b",
            "domain": "https://pandapt.net/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 411,
                        "cat": "Movies/SD",
                        "desc": "Movies SD"
                    },
                    {
                        "id": 412,
                        "cat": "Movies",
                        "desc": "Movies IPad"
                    },
                    {
                        "id": 413,
                        "cat": "Movies/HD",
                        "desc": "Movies 720p"
                    },
                    {
                        "id": 414,
                        "cat": "Movies/HD",
                        "desc": "Movies 1080p"
                    },
                    {
                        "id": 415,
                        "cat": "Movies",
                        "desc": "Movies REMUX"
                    },
                    {
                        "id": 450,
                        "cat": "Movies/BluRay",
                        "desc": "Movies Bluray"
                    },
                    {
                        "id": 499,
                        "cat": "Movies/UHD",
                        "desc": "Movies UHD Blu-ray"
                    },
                    {
                        "id": 416,
                        "cat": "Movies/UHD",
                        "desc": "Movies 2160p"
                    }
                ],
                "tv": [
                    {
                        "id": 417,
                        "cat": "TV/Documentary",
                        "desc": "Doc SD"
                    },
                    {
                        "id": 418,
                        "cat": "TV/Documentary",
                        "desc": "Doc IPad"
                    },
                    {
                        "id": 419,
                        "cat": "TV/Documentary",
                        "desc": "Doc 720p"
                    },
                    {
                        "id": 420,
                        "cat": "TV/Documentary",
                        "desc": "Doc 1080p"
                    },
                    {
                        "id": 421,
                        "cat": "TV/Documentary",
                        "desc": "Doc REMUX"
                    },
                    {
                        "id": 451,
                        "cat": "TV/Documentary",
                        "desc": "Doc Bluray"
                    },
                    {
                        "id": 500,
                        "cat": "TV/Documentary",
                        "desc": "Doc UHD Blu-ray"
                    },
                    {
                        "id": 422,
                        "cat": "TV/Documentary",
                        "desc": "Doc 2160p"
                    },
                    {
                        "id": 425,
                        "cat": "TV/SD",
                        "desc": "TVShow SD"
                    },
                    {
                        "id": 426,
                        "cat": "TV",
                        "desc": "TVShow IPad"
                    },
                    {
                        "id": 471,
                        "cat": "TV",
                        "desc": "TVShow IPad"
                    },
                    {
                        "id": 427,
                        "cat": "TV/HD",
                        "desc": "TVShow 720p"
                    },
                    {
                        "id": 472,
                        "cat": "TV/HD",
                        "desc": "TVShow 720p"
                    },
                    {
                        "id": 428,
                        "cat": "TV/HD",
                        "desc": "TVShow 1080i"
                    },
                    {
                        "id": 429,
                        "cat": "TV/HD",
                        "desc": "TVShow 1080p"
                    },
                    {
                        "id": 430,
                        "cat": "TV",
                        "desc": "TVShow REMUX"
                    },
                    {
                        "id": 452,
                        "cat": "TV/HD",
                        "desc": "TVShow Bluray"
                    },
                    {
                        "id": 431,
                        "cat": "TV/UHD",
                        "desc": "TVShow 2160p"
                    },
                    {
                        "id": 432,
                        "cat": "TV/SD",
                        "desc": "TVSeries SD"
                    },
                    {
                        "id": 433,
                        "cat": "TV",
                        "desc": "TVSeries IPad"
                    },
                    {
                        "id": 434,
                        "cat": "TV/HD",
                        "desc": "TVSeries 720p"
                    },
                    {
                        "id": 435,
                        "cat": "TV/HD",
                        "desc": "TVSeries 1080i"
                    },
                    {
                        "id": 436,
                        "cat": "TV/HD",
                        "desc": "TVSeries 1080p"
                    },
                    {
                        "id": 437,
                        "cat": "TV",
                        "desc": "TVSeries REMUX"
                    },
                    {
                        "id": 453,
                        "cat": "TV/HD",
                        "desc": "TVSeries Bluray"
                    },
                    {
                        "id": 438,
                        "cat": "TV/UHD",
                        "desc": "TVSeries 2160p"
                    },
                    {
                        "id": 444,
                        "cat": "TV/Anime",
                        "desc": "Anime SD"
                    },
                    {
                        "id": 445,
                        "cat": "TV/Anime",
                        "desc": "Anime IPad"
                    },
                    {
                        "id": 446,
                        "dat": "TV/Anime",
                        "desc": "Anime 720p"
                    },
                    {
                        "id": 447,
                        "cat": "TV/Anime",
                        "desc": "Anime 1080p"
                    },
                    {
                        "id": 448,
                        "cat": "TV/Anime",
                        "desc": "Anime REMUX"
                    },
                    {
                        "id": 454,
                        "cat": "TV/Anime",
                        "desc": "Anime Bluray"
                    },
                    {
                        "id": 449,
                        "cat": "TV/Anime",
                        "desc": "Anime 2160p"
                    },
                    {
                        "id": 501,
                        "cat": "TV/Anime",
                        "desc": "Anime UHD Blu-ray"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "replace",
                                "args": [
                                    "?",
                                    "",
                                    {
                                        "name": "querystring",
                                        "args": "cat"
                                    }
                                ]
                            }
                        ]
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "imdbid": {
                        "selector": "div.imdb_100 > a",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "tt\\d+",
                                    0
                                ]
                            }
                        ]
                    },
                    "date_elapsed": {
                        "selector": "td:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "size": {
                        "selector": "td:nth-child(5)"
                    },
                    "seeders": {
                        "selector": "td:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td:nth-child(7)"
                    },
                    "grabs": {
                        "selector": "td:nth-child(8)"
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "img.pro_free,img.pro_free2up",
                        "attribute": "onmouseover",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "\\d+-\\d+-\\d+ \\d+:\\d+:\\d+",
                                    0
                                ]
                            },
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "tags": {
                        "selector": "div > a.torrents-tag"
                    },
                    "subject": {
                        "selector": "td.embedded:nth-child(2) > div > div:nth-child(2) > span",
                        "contents": -1
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2)",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(2) > span[title=\"\"]"
                    }
                }
            }
        },
        {
            "id": "shadowflow",
            "name": "\u5f71",
            "domain": "https://shadowflow.org/",
            "encoding": "UTF-8",
            "public": false,
            "search": {
                "paths": [
                    {
                        "path": "torrents.php",
                        "method": "get"
                    }
                ],
                "params": {
                    "search": "{keyword}"
                },
                "batch": {
                    "delimiter": " ",
                    "space_replace": "_"
                }
            },
            "category": {
                "movie": [
                    {
                        "id": 401,
                        "cat": "Movies",
                        "desc": "Movies/\u7535\u5f71"
                    }
                ],
                "tv": [
                    {
                        "id": 404,
                        "cat": "TV/Documentary",
                        "desc": "Documentaries/\u7eaa\u5f55\u7247"
                    },
                    {
                        "id": 405,
                        "cat": "TV/Anime",
                        "desc": "Animations/\u52a8\u6f2b"
                    },
                    {
                        "id": 402,
                        "cat": "TV",
                        "desc": "TV Series/\u8fde\u7eed\u5267"
                    },
                    {
                        "id": 403,
                        "cat": "TV",
                        "desc": "TV Shows/\u7efc\u827a"
                    }
                ]
            },
            "torrents": {
                "list": {
                    "selector": "table.torrents > tr:has(\"table.torrentname\")"
                },
                "fields": {
                    "id": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "re_search",
                                "args": [
                                    "undefined",
                                    0
                                ]
                            }
                        ]
                    },
                    "category": {
                        "selector": "a[href*=\"?cat=\"]",
                        "attribute": "href",
                        "filters": [
                            {
                                "name": "querystring",
                                "args": "cat"
                            }
                        ]
                    },
                    "title_default": {
                        "selector": "a[href*=\"details.php?id=\"]"
                    },
                    "title_optional": {
                        "optional": true,
                        "selector": "a[title][href*=\"details.php?id=\"]",
                        "attribute": "title"
                    },
                    "title": {
                        "text": "{% if fields['title_optional'] %}{{ fields['title_optional'] }}{% else %}{{ fields['title_default'] }}{% endif %}"
                    },
                    "details": {
                        "selector": "a[href*=\"details.php?id=\"]",
                        "attribute": "href"
                    },
                    "poster": {
                        "selector": "img[data-orig]",
                        "attribute": "data-orig"
                    },
                    "download": {
                        "selector": "a[href*=\"download.php?id=\"]",
                        "attribute": "href"
                    },
                    "size": {
                        "selector": "td.rowfollow:nth-child(5)"
                    },
                    "grabs": {
                        "selector": "td.rowfollow:nth-child(8)"
                    },
                    "seeders": {
                        "selector": "td.rowfollow:nth-child(6)"
                    },
                    "leechers": {
                        "selector": "td.rowfollow:nth-child(7)"
                    },
                    "date_elapsed": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "optional": true
                    },
                    "date_added": {
                        "selector": "td.rowfollow:nth-child(4) > span",
                        "attribute": "title",
                        "optional": true
                    },
                    "date": {
                        "text": "{% if fields['date_elapsed'] or fields['date_added'] %}{{ fields['date_elapsed'] if fields['date_elapsed'] else fields['date_added'] }}{% else %}now{% endif %}",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "downloadvolumefactor": {
                        "case": {
                            "img.pro_free": 0,
                            "img.pro_free2up": 0,
                            "img.pro_50pctdown": 0.5,
                            "img.pro_50pctdown2up": 0.5,
                            "img.pro_30pctdown": 0.3,
                            "*": 1
                        }
                    },
                    "uploadvolumefactor": {
                        "case": {
                            "img.pro_50pctdown2up": 2,
                            "img.pro_free2up": 2,
                            "img.pro_2up": 2,
                            "*": 1
                        }
                    },
                    "free_deadline": {
                        "default_value": "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}",
                        "default_value_format": "%Y-%m-%d %H:%M:%S.%f",
                        "selector": "div > b > span[title]",
                        "attribute": "title",
                        "filters": [
                            {
                                "name": "dateparse",
                                "args": "%Y-%m-%d %H:%M:%S"
                            }
                        ]
                    },
                    "tags": {
                        "selector": "div > a.torrents-tag"
                    },
                    "subject": {
                        "selector": "td.embedded:nth-child(2) > div > div:nth-child(2) > span",
                        "contents": -1
                    },
                    "description": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(1)",
                        "remove": "span,a,img,font,b",
                        "contents": -1
                    },
                    "labels": {
                        "selector": "td:nth-child(2) > table.torrentname > tr > td:nth-child(1) > span[title=\"\"]"
                    }
                }
            }
        }
    ],
    "conf": {
        "jptv.club": {
            "FREE": [
                "//span/i[@class='fas fa-star text-gold']"
            ],
            "2XFREE": [],
            "HR": [],
            "PEER_COUNT": [
                "//span[@class='badge-extra text-green']"
            ]
        },
        "pthome.net": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "ptsbao.club": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "totheglory.im": {
            "FREE": [
                "//img[@class='topic'][contains(@src,'ico_free.gif')]"
            ],
            "2XFREE": [],
            "HR": [
                "//img[@src='/pic/hit_run.gif']"
            ],
            "PEER_COUNT": [
                "//span[@id='dlstatus']"
            ]
        },
        "www.beitai.pt": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "hdtime.org": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "kp.m-team.cc": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//img[contains(translate(@class, \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"abcdefghijklmnopqrstuvwxyz\"), \"pro_2xfree\") and contains(translate(@alt, \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"abcdefghijklmnopqrstuvwxyz\"), \"2xfree\")]"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "lemonhd.org": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "discfan.net": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "pt.sjtu.edu.cn": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [],
            "HR": [],
            "PEER_COUNT": []
        },
        "nanyangpt.com": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [],
            "HR": [],
            "PEER_COUNT": []
        },
        "audiences.me": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [
                "//h1[@id='top']/img[@class='hitandrun']"
            ],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "pterclub.com": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "(//td[@align='left' and @class='rowfollow' and @valign='top']/b[1])[3]"
            ]
        },
        "et8.org": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": []
        },
        "pt.keepfrds.com": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "www.pttime.org": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']",
                "//h1[@id='top']/b/font[@class='zeroupzerodown']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "1ptba.com": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [],
            "HR": [
                "//h1[@id='top']/img[@class='hitandrun']"
            ],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "www.tjupt.org": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//font[@class='twoup'][text()='2X']"
            ],
            "HR": [
                "//font[@color='red'][text()='Hit&Run']"
            ],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "hdhome.org": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "hdsky.me": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": []
        },
        "hdcity.city": {
            "FREE": [
                "//img[@class='pro_free']"
            ],
            "2XFREE": [],
            "HR": [],
            "PEER_COUNT": []
        },
        "hdcity.leniter.org": {
            "FREE": [
                "//img[@class='pro_free']"
            ],
            "2XFREE": [],
            "HR": [],
            "PEER_COUNT": []
        },
        "hdcity.work": {
            "FREE": [
                "//img[@class='pro_free']"
            ],
            "2XFREE": [],
            "HR": [],
            "PEER_COUNT": []
        },
        "hdcity4.leniter.org": {
            "FREE": [
                "//img[@class='pro_free']"
            ],
            "2XFREE": [],
            "HR": [],
            "PEER_COUNT": []
        },
        "open.cd": {
            "FREE": [
                "//img[@class='pro_free']"
            ],
            "2XFREE": [
                "//img[@class='pro_free2up']"
            ],
            "HR": [],
            "PEER_COUNT": []
        },
        "ourbits.club": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [
                "//h1[@id='top']/img[@class='hitandrun']"
            ],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "pt.btschool.club": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "pt.eastgame.org": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "pt.soulvoice.club": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [],
            "HR": [
                "//img[@class='hitandrun']"
            ],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "springsunday.net": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [
                "//h1[@id='top']/img[@class='hitandrun']"
            ],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "www.htpt.cc": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "hdchina.org": {
            "RENDER": true,
            "FREE": [
                "//h2[@id='top']/img[@class='pro_free']"
            ],
            "2XFREE": [
                "//h2[@id='top']/img[@class='pro_free2up']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "ccfbits.org": {
            "FREE": [
                "//font[@color='red'][text()='\u672c\u79cd\u5b50\u4e0d\u8ba1\u4e0b\u8f7d\u91cf，\u53ea\u8ba1\u4e0a\u4f20\u91cf!']"
            ],
            "2XFREE": [],
            "HR": [],
            "PEER_COUNT": []
        },
        "u2.dmhy.org": {
            "FREE": [
                "//td[@class='rowfollow']/img[@class='pro_free'][@alt='FREE']"
            ],
            "2XFREE": [
                "//td[@class='rowfollow']/img[@class='pro_free2up'][@alt='2X Free']"
            ],
            "HR": [],
            "PEER_COUNT": []
        },
        "hdatmos.club": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "avgv.cc": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": []
        },
        "hdfans.org": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "hdpt.xyz": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "azusa.ru": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "hdmayi.com": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "hdzone.me": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "gainbound.net": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "hdvideo.one": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "52pt.site": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "pt.msg.vg": {
            "LOGIN": "user/login/index",
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "kamept.com": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "carpt.net": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [
                "//h1[@id='top']/img[@class='hitandrun']"
            ],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "club.hares.top": {
            "FREE": [
                "//b[@class='free'][text()='\u514d\u8d39']"
            ],
            "2XFREE": [
                "//b[@class='twoupfree'][text()='2X\u514d\u8d39']"
            ],
            "HR": [],
            "PEER_COUNT": []
        },
        "www.hddolby.com": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "piggo.me": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [
                "//h1[@id='top']/img[@class='hitandrun']"
            ],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "pt.0ff.cc": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [
                "//h1[@id='top']/img[@class='hitandrun']"
            ],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "wintersakura.net": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": []
        },
        "pt.hdupt.com": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": []
        },
        "pt.upxin.net": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": []
        },
        "www.nicept.net": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": []
        },
        "ptchina.org": {
            "FREE": [
                "//h1[@id='top']/b/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": []
        },
        "www.hd.ai": {
            "FREE": [
                "//img[@class='pro_free']"
            ],
            "2XFREE": [],
            "HR": [],
            "PEER_COUNT": []
        },
        "hhanclub.top": {
            "FREE": [
                "//span[@Class='promotion-tag promotion-tag-free']"
            ],
            "2XFREE": [
                "//span[@Class='promotion-tag promotion-tag-2xfree']"
            ],
            "HR": [],
            "PEER_COUNT": []
        },
        "zmpt.cc": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "ihdbits.me": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": []
        },
        "leaves.red": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "sharkpt.net": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [
                "//h1[@id='top']/img[@class='hitandrun']"
            ],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "pt.2xfree.org": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "uploads.ltd": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "www.icc2022.com": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "www.oshen.win": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [],
            "HR": [
                "//h1[@id='top']/img[@class='hitandrun']"
            ],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "cyanbug.net": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "monikadesign.uk": {
            "FREE": [
                "//span[@class='badge-extra'][contains(@data-original-title,'Free')]"
            ],
            "2XFREE": [],
            "HR": [],
            "PEER_COUNT": [
                "//a[@class='badge-extra text-green'][contains(@data-original-title,'\u505a\u79cd')]"
            ]
        },
        "skyeysnow.com": {
            "FREE": [
                "//div[@class='pi']/b[contains(text(),'FREE')]"
            ],
            "2XFREE": [],
            "HR": [],
            "PEER_COUNT": []
        },
        "ubits.club": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "ptchdbits.co": {
            "FREE": [
                "//h1[@id='top']/img[@class='pro_free']"
            ],
            "2XFREE": [],
            "HR": [
                "//b[contains(text(),'H&R:')]"
            ],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "hdarea.club": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "xp.m-team.io": {
            "FREE": [
                "//img[contains(translate(@class, \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"abcdefghijklmnopqrstuvwxyz\"), \"pro_free\") and contains(translate(@alt, \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"abcdefghijklmnopqrstuvwxyz\"), \"free\")]"
            ],
            "2XFREE": [
                "//img[contains(translate(@class, \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"abcdefghijklmnopqrstuvwxyz\"), \"pro_2xfree\") and contains(translate(@alt, \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"abcdefghijklmnopqrstuvwxyz\"), \"2xfree\")]"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "xp.m-team.cc": {
            "FREE": [
                "//img[contains(translate(@class, \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"abcdefghijklmnopqrstuvwxyz\"), \"pro_free\") and contains(translate(@alt, \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"abcdefghijklmnopqrstuvwxyz\"), \"free\")]"
            ],
            "2XFREE": [
                "//img[contains(translate(@class, \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"abcdefghijklmnopqrstuvwxyz\"), \"pro_2xfree\") and contains(translate(@alt, \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"abcdefghijklmnopqrstuvwxyz\"), \"2xfree\")]"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "zhuque.in": {
            "RENDER": true,
            "FREE": [
                "//span[@class='text-download'][contains(text(),'0x')]"
            ],
            "2XFREE": [],
            "HR": [],
            "PEER_COUNT": [
                "//div[@class='ant-form-item-control-input-content']/span[contains(text(),'\u6b63\u5728\u505a\u79cd: )]"
            ]
        },
        "rousi.zip": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "ptcafe.club": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "pandapt.net": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        },
        "shadowflow.org": {
            "FREE": [
                "//h1[@id='top']/b/font[@class='free']"
            ],
            "2XFREE": [
                "//h1[@id='top']/b/font[@class='twoupfree']"
            ],
            "HR": [
                "//h1[@id='top']/img[@class='hitandrun']"
            ],
            "PEER_COUNT": [
                "//div[@id='peercount']/b[1]"
            ]
        }
    }
}
